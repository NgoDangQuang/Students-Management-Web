{"version":3,"sources":["utils/history.ts","components/Common/PrivateRoute.tsx","app/hooks.ts","features/auth/authSlice.ts","components/Common/Header.tsx","components/Common/Sidebar.tsx","components/Common/DefaultRoute.tsx","features/dashboard/components/StatisticItem.tsx","features/dashboard/components/StudentRankingList.tsx","features/dashboard/components/Widget.tsx","features/dashboard/dashboardSlice.ts","features/dashboard/index.tsx","features/city/citySlice.ts","api/axiosClient.ts","api/studentApi.ts","components/FormFields/InputField.tsx","components/FormFields/RadioGroupField.tsx","components/FormFields/SelectField.tsx","features/students/components/StudentForm.tsx","features/students/pages/AddEditPage.tsx","features/students/components/StudentFilter.tsx","features/students/components/StudentTable.tsx","utils/common.ts","features/students/studentSlice.ts","features/students/pages/ListPage.tsx","features/students/index.tsx","components/Layout/Admin.tsx","features/auth/pages/LoginPage.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","features/auth/authSaga.ts","api/cityApi.ts","features/city/citySaga.ts","features/counter/couterSaga.ts","features/dashboard/dashboardSaga.ts","features/students/studentSaga.ts","app/rootSaga.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["history","createBrowserHistory","PrivateRoute","props","Boolean","localStorage","getItem","to","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","isLoggedIn","logging","currentUser","undefined","authSlice","createSlice","name","reducers","login","state","action","loginSuccess","payload","loginFailed","logout","authActions","actions","authReducer","reducer","Header","dispatch","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","component","Button","color","onClick","useStyles","makeStyles","theme","link","textDecoration","backgroundColor","palette","selected","Sidebar","classes","width","maxWidth","bgcolor","List","className","ListItem","disablePadding","ListItemButton","ListItemIcon","Dashboard","ListItemText","primary","People","DefaultRoute","root","display","flexFlow","justifyContent","alignItems","padding","spacing","border","divider","StatisticItem","icon","label","value","Paper","align","StudentRankingList","studentList","TableContainer","Table","size","TableHead","TableRow","TableCell","TableBody","map","student","idx","mark","id","Widget","title","children","mt","dashboardSlice","loading","statistics","maleCount","femaleCount","highMarkCount","lowMarkCount","highestStudentList","lowestStudentList","rankingByCityList","fetchData","fetchDataSuccess","fetchDataFailed","setStatistics","setHighestStudentList","setLowestStudentList","setRankingByCityList","dashboardActions","selectDashboardLoading","dashboard","selectDashboardStatistics","selectHighestStudentList","selectLowestStudentList","selectRankingByCityList","dashboardReducer","paddingTop","top","React","LinearProgress","Grid","container","item","xs","md","lg","fontSize","cityName","rankingList","cityId","citySlice","list","fetchCityList","fetchCityListSuccess","data","fetchCityListFailed","cityActions","selectCityList","city","selectCityMap","createSelector","cityList","reduce","code","selectCityOptions","cityReducer","axiosClient","axios","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","response","studentApi","getAll","params","get","getById","url","add","post","update","patch","remove","delete","InputField","control","inputProps","useController","field","onChange","onBlur","ref","fieldState","invalid","TextField","fullWidth","margin","inputRef","helperText","message","RadioGroupField","disabled","options","FormControl","FormLabel","RadioGroup","row","option","FormControlLabel","Radio","FormHelperText","SelectField","InputLabel","Select","labelId","MenuItem","schema","yup","shape","required","test","split","filter","x","length","age","positive","min","max","integer","typeError","gender","oneOf","StudentForm","initialValues","onSubmit","cityOptions","useState","setError","useForm","defaultValues","resolver","yupResolver","handleSubmit","isSubmitting","formState","handleFormSubmit","formValues","console","log","type","Array","isArray","Alert","severity","CircularProgress","AddEditPage","useHistory","studentId","useParams","isEdit","setStudent","useEffect","handleStudentFormSubmit","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","push","style","ChevronLeft","StudentFilter","onSearchChange","searchRef","useRef","htmlFor","OutlinedInput","endAdornment","SearchOutlined","e","newFilter","_page","name_like","target","_sort","_order","current","StudentTable","cityMap","onEdit","onRemove","open","setOpen","selectedStudent","setSelectedStudent","handleClose","str","toUpperCase","slice","fontWeight","marginRight","handleRemoveClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","studentSlice","_limit","pagination","_totalRows","fetchStudentList","fetchStudentListSuccess","fetchStudentListFailed","setFilter","setFilterWithDebounce","studentActions","selectStudentList","selectStudentLoading","selectStudentFilter","selectStudentPagination","studentReducer","paddingTo","titleContainer","marginBottom","ListPage","match","useRouteMatch","handleRemoveStudent","handleEditStudent","mb","Pagination","count","Math","ceil","page","StudentFeature","path","exact","gridTemplateRows","gridTemplateColumns","gridTemplateAreas","minHeight","header","gridArea","sidebar","borderRight","background","paper","main","AdminLayout","useStyle","box","btn","marginTop","LoginPage","isLogging","auth","elevation","username","password","App","fetchCount","amount","resolve","setTimeout","incrementAsync","createAsyncThunk","counterSlice","status","increment","decrement","incrementByAmount","incrementSaga","incrementSagaSuccess","extraReducers","builder","addCase","pending","fulfilled","rejected","handleLogin","handleLogout","watchLoginFlow","authSaga","delay","setItem","put","removeItem","take","fork","call","cityApi","citySaga","takeLatest","handleIncrementSaga","counterSaga","takeEvery","toString","fetchStatistics","fetchHighestStudentList","fetchLowestStudentList","fetchRankingByCityList","fetchDashboardData","dashboardSaga","all","mark_gte","mark_lte","responseList","statisticList","callList","handleSearchDebounce","studentSaga","debounce","rootSaga","rootReducer","combineReducers","router","connectRouter","counter","counterReducer","sagaMiddleware","createSagaMiddleware","store","configureStore","middleware","getDefaultMiddleware","concat","routerMiddleware","run","window","location","hostname","ReactDOM","render","StrictMode","CssBaseline","newestOnTop","rtl","pauseOnFocusLoss","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"4OAEaA,EAAUC,c,2BCAhB,SAASC,EAAaC,GAE3B,OADmBC,QAAQC,aAAaC,QAAQ,iBAEzC,cAAC,IAAD,eAAWH,IADM,cAAC,IAAD,CAAUI,GAAG,UAEtC,C,iDCFYC,EAAiB,kBAAMC,aAAN,EACjBC,EAAkDC,I,QCSzDC,EAA0B,CAC9BC,YAAY,EACZC,SAAS,EACTC,iBAAaC,GAGTC,EAAYC,YAAY,CAC5BC,KAAM,OACNP,eACAQ,SAAU,CACRC,MADQ,SACFC,EAAOC,GACXD,EAAMR,SAAU,CACjB,EACDU,aAJQ,SAIKF,EAAOC,GAClBD,EAAMR,SAAU,EAChBQ,EAAMP,YAAcQ,EAAOE,OAC5B,EACDC,YARQ,SAQIJ,EAAOC,GACjBD,EAAMR,SAAU,CACjB,EAEDa,OAZQ,SAYDL,GACLA,EAAMT,YAAa,EACnBS,EAAMP,iBAAcC,CACrB,KAKQY,EAAcX,EAAUY,QAQtBC,EADKb,EAAUc,QC1CvB,SAASC,IACd,IAAMC,EAAWzB,IAIjB,OACE,cAAC0B,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,GAArB,SACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAMP,GAAI,CAAEC,SAAU,GAAzD,gCAGA,cAACO,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAVN,WACxBZ,EAASL,EAAYD,SACtB,EAQO,0BAOT,C,oFCjBKmB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJL,MAAO,UACPM,eAAgB,OAChB,gBAAgB,CACdC,gBAAgBH,EAAMI,QAAQ7B,OAAO8B,WALd,IAUtB,SAASC,IACd,IAAMC,EAAUT,IAChB,OACE,cAACZ,EAAA,EAAD,CAAKC,GAAI,CAAEqB,MAAO,OAAQC,SAAU,IAAKC,QAAS,oBAAlD,SACE,qBAAK,aAAW,uBAAhB,SACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAASpD,GAAG,mBAAmBqD,UAAWL,EAAQN,KAAlD,SACE,cAACY,EAAA,EAAD,CAAUC,gBAAc,EAAxB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CAAcC,QAAQ,qBAK5B,cAAC,IAAD,CAAS5D,GAAG,kBAAkBqD,UAAWL,EAAQN,KAAjD,SACE,cAACY,EAAA,EAAD,CAAUC,gBAAc,EAAxB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,MAEF,cAACF,EAAA,EAAD,CAAcC,QAAQ,0BAQrC,CCjDM,SAASE,EAAalE,GAE3B,OADmBC,QAAQC,aAAaC,QAAQ,iBAG9C,cAAC,IAAD,CAAUC,GAAG,qBAFS,cAAC,IAAD,CAAUA,GAAG,UAItC,C,gHCJKuC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsB,KAAM,CACJC,QAAS,OACTC,SAAU,aACVC,eAAgB,gBAChBC,WAAY,SACZC,QAAS3B,EAAM4B,QAAQ,GACvBC,OAAO,aAAD,OAAe7B,EAAMI,QAAQ0B,UAPV,IAgBd,SAASC,GAAT,GAAoE,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,MAC7C3B,EAAUT,KAChB,OACE,8BACE,eAACqC,EAAA,EAAD,CAAOvB,UAAWL,EAAQe,KAA1B,UACE,cAACpC,EAAA,EAAD,UAAM8C,IACN,eAAC9C,EAAA,EAAD,WACE,cAACM,EAAA,EAAD,CAAYC,QAAQ,KAAK2C,MAAM,QAA/B,SAAwCF,IACxC,cAAC1C,EAAA,EAAD,CAAYC,QAAQ,YAApB,SAAiCwC,WAK1C,C,gECrBc,SAASI,GAAT,GAAuE,IAAzCC,EAAwC,EAAxCA,YAC3C,OACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAOC,KAAK,QAAQ,aAAW,eAA/B,UACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWR,MAAM,SAAjB,eACA,cAACQ,GAAA,EAAD,CAAWR,MAAM,OAAjB,kBACA,cAACQ,GAAA,EAAD,CAAWR,MAAM,QAAjB,uBAGJ,cAACS,GAAA,EAAD,UACGP,EAAYQ,KAAI,SAACC,EAASC,GAAV,OACf,eAACL,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWR,MAAM,SAAjB,SAA2BY,EAAM,IACjC,cAACJ,GAAA,EAAD,CAAWR,MAAM,OAAjB,SAAyBW,EAAQ5E,OACjC,cAACyE,GAAA,EAAD,CAAWR,MAAM,QAAjB,SAA0BW,EAAQE,SAHrBF,EAAQG,GADR,UAW1B,CC/BD,IAAMpD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsB,KAAM,CACJK,QAAS3B,EAAM4B,QAAQ,GACvBC,OAAO,aAAD,OAAe7B,EAAMI,QAAQ0B,UAHV,IAWd,SAASqB,GAAT,GAAmD,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAChC9C,EAAUT,KAChB,OACE,eAACqC,EAAA,EAAD,CAAOvB,UAAWL,EAAQe,KAA1B,UACE,cAAC9B,EAAA,EAAD,CAAYC,QAAQ,SAApB,SAA8B2D,IAC9B,cAAClE,EAAA,EAAD,CAAKoE,GAAI,EAAT,SAAaD,MAGlB,CCED,IAYME,GAAiBrF,YAAY,CACjCC,KAAM,YACNP,aAdmC,CACnC4F,SAAS,EACTC,WAAY,CACVC,UAAW,EACXC,YAAa,EACbC,cAAe,EACfC,aAAc,GAEhBC,mBAAoB,GACpBC,kBAAmB,GACnBC,kBAAmB,IAKnB5F,SAAU,CACR6F,UADQ,SACE3F,GACRA,EAAMkF,SAAU,CACjB,EACDU,iBAJQ,SAIS5F,GACfA,EAAMkF,SAAU,CACjB,EACDW,gBAPQ,SAOQ7F,GACdA,EAAMkF,SAAU,CACjB,EAEDY,cAXQ,SAWM9F,EAAOC,GACnBD,EAAMmF,WAAalF,EAAOE,OAC3B,EACD4F,sBAdQ,SAcc/F,EAAOC,GAC3BD,EAAMwF,mBAAqBvF,EAAOE,OACnC,EACD6F,qBAjBQ,SAiBahG,EAAOC,GAC1BD,EAAMyF,kBAAoBxF,EAAOE,OAClC,EACD8F,qBApBQ,SAoBajG,EAAOC,GAC1BD,EAAM0F,kBAAoBzF,EAAOE,OAClC,KAKQ+F,GAAmBjB,GAAe1E,QAGlC4F,GAAyB,SAACnG,GAAD,OAAsBA,EAAMoG,UAAUlB,OAAtC,EACzBmB,GAA4B,SAACrG,GAAD,OAAsBA,EAAMoG,UAAUjB,UAAtC,EAC5BmB,GAA2B,SAACtG,GAAD,OAAsBA,EAAMoG,UAAUZ,kBAAtC,EAC3Be,GAA0B,SAACvG,GAAD,OAAsBA,EAAMoG,UAAUX,iBAAtC,EAC1Be,GAA0B,SAACxG,GAAD,OAAsBA,EAAMoG,UAAUV,iBAAtC,EAKxBe,GADUxB,GAAexE,QC1DlCe,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsB,KAAM,CACJhC,SAAU,WACV0F,WAAYhF,EAAM4B,QAAQ,IAE5B4B,QAAS,CACPlE,SAAU,WACV2F,IAAKjF,EAAM4B,SAAS,IAPK,IAUd,SAASX,KACtB,IAAMhC,EAAWzB,IACXgG,EAAU9F,EAAe+G,IACzBhB,EAAa/F,EAAeiH,IAC5Bb,EAAqBpG,EAAekH,IACpCb,EAAoBrG,EAAemH,IACnCb,EAAoBtG,EAAeoH,IAEnCvE,EAAUT,KAMhB,OAJAoF,aAAgB,WACdjG,EAASuF,GAAiBP,YAC3B,GAAE,CAAChF,IAGF,eAACC,EAAA,EAAD,CAAK0B,UAAWL,EAAQe,KAAxB,UAEGkC,GAAW,cAAC2B,EAAA,EAAD,CAAgBvE,UAAWL,EAAQiD,UAG/C,eAAC4B,EAAA,EAAD,CAAMC,WAAS,EAACzD,QAAS,EAAzB,UACE,cAACwD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC1D,GAAD,CACEC,KAAM,cAAC,IAAD,CAAiB0D,SAAS,QAAQ9F,MAAM,YAC9CqC,MAAM,OACNC,MAAOuB,EAAWC,cAItB,cAAC0B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC1D,GAAD,CACEC,KAAM,cAAC,IAAD,CAAmB0D,SAAS,QAAQ9F,MAAM,YAChDqC,MAAM,SACNC,MAAOuB,EAAWE,gBAItB,cAACyB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC1D,GAAD,CACEC,KAAM,cAAC,IAAD,CAA0B0D,SAAS,QAAQ9F,MAAM,YACvDqC,MAAM,YACNC,MAAOuB,EAAWG,kBAItB,cAACwB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC1D,GAAD,CACEC,KAAM,cAAC,IAAD,CAAwB0D,SAAS,QAAQ9F,MAAM,YACrDqC,MAAM,YACNC,MAAOuB,EAAWI,oBAMxB,eAAC3E,EAAA,EAAD,CAAKoE,GAAI,EAAT,UACE,cAAC9D,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BAEA,cAACP,EAAA,EAAD,CAAKoE,GAAI,EAAT,SACE,eAAC8B,EAAA,EAAD,CAAMC,WAAS,EAACzD,QAAS,EAAzB,UACE,cAACwD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAACtC,GAAD,CAAQC,MAAM,4BAAd,SACE,cAACf,GAAD,CAAoBC,YAAawB,QAIrC,cAACsB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAACtC,GAAD,CAAQC,MAAM,2BAAd,SACE,cAACf,GAAD,CAAoBC,YAAayB,gBAO3C,eAAC7E,EAAA,EAAD,CAAKoE,GAAI,EAAT,UACE,cAAC9D,EAAA,EAAD,CAAYC,QAAQ,KAApB,6BAEA,cAACP,EAAA,EAAD,CAAKoE,GAAI,EAAT,SACE,cAAC8B,EAAA,EAAD,CAAMC,WAAS,EAACzD,QAAS,EAAzB,SACGoC,EAAkBlB,KAAI,SAACwC,GAAD,OACrB,cAACF,EAAA,EAAD,CAAwBE,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAhD,SACE,cAACtC,GAAD,CAAQC,MAAOkC,EAAKK,SAApB,SACE,cAACtD,GAAD,CAAoBC,YAAagD,EAAKM,iBAF/BN,EAAKO,OADK,aAYlC,C,cC5GKC,GAAY5H,YAAY,CAC5BC,KAAM,OACNP,aAP8B,CAC9B4F,SAAS,EACTuC,KAAM,IAMN3H,SAAU,CACR4H,cADQ,SACM1H,GACZA,EAAMkF,SAAU,CACjB,EACDyC,qBAJQ,SAIa3H,EAAOC,GAC1BD,EAAMkF,SAAU,EAChBlF,EAAMyH,KAAOxH,EAAOE,QAAQyH,IAC7B,EACDC,oBARQ,SAQY7H,GAClBA,EAAMkF,SAAU,CACjB,KAKQ4C,GAAcN,GAAUjH,QAGxBwH,GAAiB,SAAC/H,GAAD,OAAsBA,EAAMgI,KAAKP,IAAjC,EAEjBQ,GAAgBC,aAAeH,IAAgB,SAACI,GAAD,OAC1DA,EAASC,QAAO,SAAC5D,EAA8BwD,GAE7C,OADAxD,EAAIwD,EAAKK,MAAQL,EACVxD,CACR,GAAE,CAAC,EAJsD,IAO/C8D,GAAoBJ,aAAeH,IAAgB,SAACI,GAAD,OAC9DA,EAAS3D,KAAI,SAACwD,GAAD,MAAW,CACtBrE,MAAOqE,EAAKnI,KACZ+D,MAAOoE,EAAKK,KAFD,GADiD,IASjDE,GADKf,GAAU/G,Q,+CClDxB+H,G,QAAcC,EAAMC,OAAO,CAC/BC,QAAS,uCACTC,QAAS,CACP,eAAgB,sBAKpBJ,GAAYK,aAAaC,QAAQC,KAC/B,SAAUC,GAER,OAAOA,CACR,IACD,SAAUC,GAER,OAAOC,QAAQC,OAAOF,EACvB,IAIHT,GAAYK,aAAaO,SAASL,KAChC,SAAUK,GAGR,OAAOA,EAASxB,IACjB,IACD,SAAUqB,GAGR,OAAOC,QAAQC,OAAOF,EACvB,IAGYT,UCLAa,GA3BI,CACjBC,OADiB,SACVC,GAEL,OAAOf,GAAYgB,IADP,YACgB,CAAED,UAC/B,EAEDE,QANiB,SAMT7E,GACN,IAAM8E,EAAG,oBAAgB9E,GACzB,OAAO4D,GAAYgB,IAAIE,EACxB,EAEDC,IAXiB,SAWb/B,GAEF,OAAOY,GAAYoB,KADP,YACiBhC,EAC9B,EAEDiC,OAhBiB,SAgBVjC,GACL,IAAM8B,EAAG,oBAAgB9B,EAAKhD,IAC9B,OAAO4D,GAAYsB,MAAMJ,EAAK9B,EAC/B,EAEDmC,OArBiB,SAqBVnF,GACL,IAAM8E,EAAG,oBAAgB9E,GACzB,OAAO4D,GAAYwB,OAAON,EAC3B,G,wFCjBI,SAASO,GAAT,GAA+E,IAAzDpK,EAAwD,EAAxDA,KAAMqK,EAAkD,EAAlDA,QAASvG,EAAyC,EAAzCA,MAAUwG,EAA+B,mBACnF,EAGIC,aAAc,CAChBvK,OACAqK,YALF,IACEG,MAASzG,EADX,EACWA,MAAO0G,EADlB,EACkBA,SAAUC,EAD5B,EAC4BA,OAAQC,EADpC,EACoCA,IADpC,IAEEC,WAAcC,EAFhB,EAEgBA,QAASzB,EAFzB,EAEyBA,MAKzB,OACE,cAAC0B,GAAA,EAAD,CACEC,WAAS,EACTzG,KAAK,QACL0G,OAAO,SACPjH,MAAOA,EACP0G,SAAUA,EACVC,OAAQA,EACR5G,MAAOA,EACPxC,QAAQ,WACR2J,SAAUN,EACVvB,MAAOyB,EACPK,WAAU,OAAE9B,QAAF,IAAEA,OAAF,EAAEA,EAAO+B,QACnBb,WAAYA,GAGjB,C,gECbM,SAASc,GAAT,GAA6F,IAAlEpL,EAAiE,EAAjEA,KAAMqK,EAA2D,EAA3DA,QAASvG,EAAkD,EAAlDA,MAAOuH,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,QAChE,EAGIf,aAAc,CAChBvK,OACAqK,YALF,IACEG,MAASzG,EADX,EACWA,MAAO0G,EADlB,EACkBA,SAAUC,EAD5B,EAC4BA,OAD5B,IAEEE,WAAcC,EAFhB,EAEgBA,QAASzB,EAFzB,EAEyBA,MAKzB,OACE,eAACmC,GAAA,EAAD,CAAaF,SAAUA,EAAUL,OAAO,SAASzJ,UAAU,WAAW6H,MAAOyB,EAA7E,UACE,cAACW,GAAA,EAAD,CAAWjK,UAAU,SAArB,SAA+BuC,IAC/B,cAAC2H,GAAA,EAAD,CAAYC,KAAG,EAAC1L,KAAMA,EAAM+D,MAAOA,EAAO0G,SAAUA,EAAUC,OAAQA,EAAtE,SACGY,EAAQ3G,KAAI,SAACgH,GAAD,OACX,cAACC,GAAA,EAAD,CAEE7H,MAAO4H,EAAO5H,MACdsG,QAAS,cAACwB,GAAA,EAAD,IACT/H,MAAO6H,EAAO7H,OAHT6H,EAAO5H,MAFH,MAUf,cAAC+H,GAAA,EAAD,iBAAiB1C,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAO+B,YAG7B,C,kCC5BM,SAASY,GAAT,GAAqF,IAA9D/L,EAA6D,EAA7DA,KAAMqK,EAAuD,EAAvDA,QAASvG,EAA8C,EAA9CA,MAAOuH,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,QAC5D,EAGIf,aAAc,CAChBvK,OACAqK,YALF,IACEG,MAASzG,EADX,EACWA,MAAO0G,EADlB,EACkBA,SAAUC,EAD5B,EAC4BA,OAD5B,IAEEE,WAAcC,EAFhB,EAEgBA,QAASzB,EAFzB,EAEyBA,MAKzB,OACE,eAACmC,GAAA,EAAD,CACER,WAAS,EACTzJ,QAAQ,WACR0J,OAAO,SACP1G,KAAK,QACL+G,SAAUA,EACVjC,MAAOyB,EANT,UAQE,cAACmB,GAAA,EAAD,CAAYjH,GAAE,UAAK/E,EAAL,UAAd,SAAkC8D,IAClC,cAACmI,GAAA,EAAD,CACEC,QAAO,UAAKlM,EAAL,UACP+D,MAAOA,EACP0G,SAAUA,EACVC,OAAQA,EACR5G,MAAOA,EALT,SAOGwH,EAAQ3G,KAAI,SAACgH,GAAD,OACX,cAACQ,GAAA,EAAD,CAAUpI,MAAO4H,EAAO5H,MAAxB,SACG4H,EAAO7H,OAD0B6H,EAAO5H,MADhC,MAOf,cAAC+H,GAAA,EAAD,iBAAiB1C,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAO+B,YAG7B,C,aCrCKiB,GAASC,OAAaC,MAAM,CAChCtM,KAAMqM,OAEHE,WACAC,KAAK,YAAa,mCAAmC,SAACzI,GACrD,OAAKA,KACc,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAO0I,MAAM,OAAQ,IACtBC,QAAO,SAACC,GAAD,OAAO1N,QAAQ0N,EAAf,IAAmBC,QAAU,CAClD,IACHC,IAAKR,OAEFS,SAAS,mCACTC,IAAI,GAAI,aACRC,IAAI,GAAI,aACRC,QAAQ,4BACRV,SAAS,qBACTW,UAAU,gCACbpI,KAAMuH,OAEHU,IAAI,EAAG,YACPC,IAAI,GAAI,aACRT,SAAS,sBACTW,UAAU,gCACbC,OAAQd,OAELe,MAAM,CAAC,OAAQ,UAAW,wCAC1Bb,SAAS,yBACZpE,KAAMkE,OAAaE,SAAS,yBAGf,SAASc,GAAT,GAAqE,IAA9CC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,SAC7CC,EAAcjO,EAAekJ,IACnC,EAA0BgF,mBAAiB,IAA3C,oBAAOrE,EAAP,KAAcsE,EAAd,KACA,EAIIC,aAAiB,CACnBC,cAAeN,EACfO,SAAUC,aAAY1B,MALtB/B,EADF,EACEA,QACA0D,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,aAMTE,EAAgB,mDAAG,WAAOC,GAAP,4FAGrBT,EAAS,IAHY,gBAIfH,QAJe,IAIfA,OAJe,EAIfA,EAAWY,GAJI,sDAOrBC,QAAQC,IAAI,yBAPS,wDAAH,sDAUtB,OACE,cAACtN,EAAA,EAAD,CAAKuB,SAAU,IAAf,SACE,uBAAMiL,SAAUQ,EAAaG,GAA7B,UACE,cAAC9D,GAAD,CAAYpK,KAAK,OAAOqK,QAASA,EAASvG,MAAM,cAEhD,cAACsH,GAAD,CACEpL,KAAK,SACLqK,QAASA,EACTvG,MAAM,SACNwH,QAAS,CACP,CAAExH,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,SAAUC,MAAO,aAG9B,cAACqG,GAAD,CAAYpK,KAAK,MAAMqK,QAASA,EAASvG,MAAM,MAAMwK,KAAK,WAC1D,cAAClE,GAAD,CAAYpK,KAAK,OAAOqK,QAASA,EAASvG,MAAM,OAAOwK,KAAK,WAE3DC,MAAMC,QAAQhB,IAAgBA,EAAYZ,OAAS,GAClD,cAACb,GAAD,CAAa/L,KAAK,OAAOqK,QAASA,EAASvG,MAAM,OAAOwH,QAASkC,IAGlEpE,GAAS,cAACqF,GAAA,EAAD,CAAOC,SAAS,QAAhB,SAAyBtF,IAEnC,cAACrI,EAAA,EAAD,CAAKoE,GAAI,EAAT,SACE,eAAC3D,EAAA,EAAD,CAAQ8M,KAAK,SAAShN,QAAQ,YAAYG,MAAM,UAAU4J,SAAU2C,EAApE,UACGA,GAAgB,cAACW,GAAA,EAAD,CAAkBrK,KAAM,GAAI7C,MAAM,YADrD,oBAOT,CC1Fc,SAASmN,KACtB,IAAM/P,EAAUgQ,cACRC,EAAcC,cAAdD,UACFE,EAAS/P,QAAQ6P,GACvB,EAA8BrB,qBAA9B,oBAAO7I,EAAP,KAAgBqK,EAAhB,KAEAC,qBAAU,WACHJ,GAGL,kCAAC,wHAE+BtF,GAAWI,QAAQkF,GAFlD,OAES/G,EAFT,OAGGkH,EAAWlH,GAHd,gDAKGqG,QAAQC,IAAI,iCAAZ,MALH,wDAAD,EAQD,GAAE,CAACS,IAEJ,IAAMK,EAAuB,mDAAG,WAAOhB,GAAP,gFAC1Ba,EAD0B,gCAEtBxF,GAAWQ,OAAOmE,GAFI,6CAItB3E,GAAWM,IAAIqE,GAJO,OAQ9BiB,YAAM,0CAAiC,CACrCjO,SAAU,YACVkO,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU7P,IAIZhB,EAAQ8Q,KAAK,mBAnBiB,2CAAH,sDAqBvBrC,EAAsB,aAC1BtN,KAAM,GACN6M,IAAK,GACL/H,KAAM,GACNqI,OAAQ,OACRhF,KAAM,IACHvD,GAGL,OACE,eAAC7D,EAAA,EAAD,WACE,cAAC,IAAD,CAAM3B,GAAG,kBAAT,SACE,eAACiC,EAAA,EAAD,CAAYC,QAAQ,UAAUsO,MAAO,CAAExM,QAAS,OAAQG,WAAY,UAApE,UACE,cAACsM,GAAA,EAAD,IADF,6BAKF,cAACxO,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0B0N,EAAS,sBAAwB,sBAExDA,GAAU/P,QAAQ2F,KACnB,cAAC7D,EAAA,EAAD,CAAKoE,GAAI,EAAT,SACE,cAACkI,GAAD,CAAaC,cAAeA,EAAeC,SAAU4B,QAK9D,C,kCCtDc,SAASW,GAAT,GAKS,IAJtBpD,EAIqB,EAJrBA,OACApE,EAGqB,EAHrBA,SACAmC,EAEqB,EAFrBA,SACAsF,EACqB,EADrBA,eAEMC,EAAYC,mBAmDlB,OACE,cAAClP,EAAA,EAAD,UACE,eAACkG,EAAA,EAAD,CAAMC,WAAS,EAACzD,QAAS,EAAzB,UACE,cAACwD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACkE,GAAA,EAAD,CAAaR,WAAS,EAACzJ,QAAQ,WAAWgD,KAAK,QAA/C,UACE,cAAC0H,GAAA,EAAD,CAAYkE,QAAQ,eAApB,4BACA,cAACC,GAAA,EAAD,CACEpL,GAAG,eACHqL,aAAc,cAACC,GAAA,EAAD,IACdvM,MAAM,iBACN2G,SA3De,SAAC6F,GAC1B,GAAKP,EAAL,CACA,IAAMQ,EAAqB,2BACtB7D,GADsB,IAEzB8D,MAAO,EACPC,UAAWH,EAAEI,OAAO3M,QAEtBgM,EAAeQ,EANY,CAO5B,EAoDWtF,SAAU+E,SAIhB,cAAC/I,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,eAACiE,GAAA,EAAD,CAAaR,WAAS,EAACzG,KAAK,QAA5B,UACE,cAAC0H,GAAA,EAAD,CAAYjH,GAAG,eAAf,4BACA,eAACkH,GAAA,EAAD,CACEC,QAAQ,eACRpI,MAAM,iBACNC,MAAO2I,EAAOvE,MAAQ,GACtBsC,SA7Da,SAAC6F,GACxB,GAAK7F,EAAL,CACA,IAAM8F,EAAqB,2BACtB7D,GADsB,IAEzB8D,MAAO,EACPrI,KAAMmI,EAAEI,OAAO3M,YAASlE,IAE1B4K,EAAS8F,EANY,CAOtB,EAiDS,UAME,cAACpE,GAAA,EAAD,CAAUpI,MAAM,GAAhB,SACE,uCAEDuE,EAAS3D,KAAI,SAACwD,GAAD,OACZ,cAACgE,GAAA,EAAD,CAA0BpI,MAAOoE,EAAKK,KAAtC,SACGL,EAAKnI,MADOmI,EAAKK,KADR,YAQpB,cAACvB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,eAACiE,GAAA,EAAD,CAAaR,WAAS,EAACzG,KAAK,QAA5B,UACE,cAAC0H,GAAA,EAAD,CAAYjH,GAAG,SAAf,kBACA,eAACkH,GAAA,EAAD,CACEC,QAAQ,SACRnI,MAAO2I,EAAOiE,MAAP,UAAkBjE,EAAOiE,MAAzB,YAAkCjE,EAAOkE,QAAW,GAC3DnG,SAtEa,SAAC6F,GACxB,GAAK7F,EAAL,CAEA,IACA,EADc6F,EAAEI,OAAO3M,MACmB0I,MAAM,KAAhD,oBAAOkE,EAAP,KAAcC,EAAd,KACML,EAAqB,2BACtB7D,GADsB,IAEzBiE,MAAOA,QAAS9Q,EAChB+Q,OAASA,QAA6B/Q,IAExC4K,EAAS8F,EATY,CAUtB,EA4DWzM,MAAM,OAJR,UAME,cAACqI,GAAA,EAAD,CAAUpI,MAAM,GAAhB,SACE,2CAEF,cAACoI,GAAA,EAAD,CAAUpI,MAAM,WAAhB,sBACA,cAACoI,GAAA,EAAD,CAAUpI,MAAM,YAAhB,uBACA,cAACoI,GAAA,EAAD,CAAUpI,MAAM,WAAhB,sBACA,cAACoI,GAAA,EAAD,CAAUpI,MAAM,YAAhB,+BAIN,cAACkD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC9F,EAAA,EAAD,CAAQF,QAAQ,WAAWG,MAAM,UAAUsJ,WAAS,EAACrJ,QAvEnC,WACxB,GAAK+I,EAAL,CAEA,IAAM8F,EAAqB,2BACtB7D,GADsB,IAEzB8D,MAAO,EACPG,WAAO9Q,EACP+Q,YAAQ/Q,EACRsI,UAAMtI,EACN4Q,eAAW5Q,IAEb4K,EAAS8F,GACLP,EAAUa,UACZb,EAAUa,QAAQ9M,MAAQ,GAZP,CActB,EAwDO,yBAOT,C,sDCpHc,SAAS+M,GAAT,GAKQ,IAJrB3M,EAIoB,EAJpBA,YACA4M,EAGoB,EAHpBA,QACAC,EAEoB,EAFpBA,OACAC,EACoB,EADpBA,SAEA,EAAwBxD,oBAAS,GAAjC,oBAAOyD,EAAP,KAAaC,EAAb,KACA,EAA8C1D,qBAA9C,oBAAO2D,EAAP,KAAwBC,EAAxB,KAEMC,EAAc,WAClBH,GAAQ,EACT,EAUD,OACE,qCACE,cAAC/M,GAAA,EAAD,CAAgB7C,UAAWyC,IAA3B,SACE,eAACK,GAAA,EAAD,CAAOC,KAAK,QAAQ,aAAW,eAA/B,UACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,iBACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,mBACA,cAACA,GAAA,EAAD,CAAWR,MAAM,QAAjB,0BAGJ,cAACS,GAAA,EAAD,UACGP,EAAYQ,KAAI,SAACC,EAASC,GAAV,MCxDAC,EALIyM,ED6DJ,OACf,eAAC/M,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UAAYG,EAAQG,KACpB,cAACN,GAAA,EAAD,UAAYG,EAAQ5E,OACpB,cAACyE,GAAA,EAAD,WCjEiB8M,EDiEY3M,EAAQuI,OChE9CoE,EACC,GAAN,OAAUA,EAAI,GAAGC,eAAjB,OAAiCD,EAAIE,MAAM,IAD1B,MDiEH,cAAChN,GAAA,EAAD,UACE,cAAC1D,EAAA,EAAD,CAAKU,OC9DMqD,ED8DcF,EAAQE,KC7D7CA,GAAQ,EAAU,QAClBA,GAAQ,EAAU,YACf,OD2DiD4M,WAAW,OAAnD,SACG9M,EAAQE,SAGb,cAACL,GAAA,EAAD,oBAAYsM,EAAQnM,EAAQuD,aAA5B,aAAY,EAAuBnI,OACnC,eAACyE,GAAA,EAAD,CAAWR,MAAM,QAAjB,UACE,cAACzC,EAAA,EAAD,CACER,GAAI,CAAE2Q,YAAa,OACnBrN,KAAK,QACL7C,MAAM,UACNC,QAAS,yBAAMsP,QAAN,IAAMA,OAAN,EAAMA,EAASpM,EAAf,EAJX,kBASA,cAACpD,EAAA,EAAD,CAAQ8C,KAAK,QAAQ7C,MAAM,YAAYC,QAAS,kBA5CtC,SAACkD,GACzByM,EAAmBzM,GACnBuM,GAAQ,EACT,CAyCqES,CAAkBhN,EAAxB,EAAhD,yBApBWA,EAAQG,GADR,WAiCvB,eAAC8M,GAAA,EAAD,CACEX,KAAMA,EACNY,QAASR,EACT,kBAAgB,qBAChB,mBAAiB,2BAJnB,UAME,cAACS,GAAA,EAAD,CAAahN,GAAG,qBAAhB,+BACA,cAACiN,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAmBlN,GAAG,2BAAtB,0DACyCqM,QADzC,IACyCA,OADzC,EACyCA,EAAiBpR,KAD1D,KAEE,uBAFF,iCAMF,eAACkS,GAAA,EAAD,WACE,cAAC1Q,EAAA,EAAD,CAAQE,QAAS4P,EAAahQ,QAAQ,WAAtC,oBAGA,cAACE,EAAA,EAAD,CACEE,QAAS,kBAvEUkD,EAuEgBwM,EAtEnC,OAARH,QAAQ,IAARA,KAAWrM,QACXuM,GAAQ,GAFkB,IAACvM,CAuEV,EACTnD,MAAM,YACNH,QAAQ,YACR6Q,WAAS,EAJX,4BAYT,CEjHD,IAaMC,GAAerS,YAAY,CAC/BC,KAAM,UACNP,aAfiC,CACjC4F,SAAS,EACTuC,KAAM,GACN8E,OAAQ,CACN8D,MAAO,EACP6B,OAAQ,IAEVC,WAAY,CACV9B,MAAO,EACP6B,OAAQ,GACRE,WAAY,KAMdtS,SAAU,CACRuS,iBADQ,SACSrS,EAAOC,GACtBD,EAAMkF,SAAU,CACjB,EACDoN,wBAJQ,SAIgBtS,EAAOC,GAC7BD,EAAMyH,KAAOxH,EAAOE,QAAQyH,KAC5B5H,EAAMmS,WAAalS,EAAOE,QAAQgS,WAClCnS,EAAMkF,SAAU,CACjB,EACDqN,uBATQ,SASevS,GACrBA,EAAMkF,SAAU,CACjB,EAEDsN,UAbQ,SAaExS,EAAOC,GACfD,EAAMuM,OAAStM,EAAOE,OACvB,EACDsS,sBAhBQ,SAgBczS,EAAOC,GAAqC,KAKzDyS,GAAiBT,GAAa1R,QAG9BoS,GAAoB,SAAC3S,GAAD,OAAsBA,EAAMyE,QAAQgD,IAApC,EACpBmL,GAAuB,SAAC5S,GAAD,OAAsBA,EAAMyE,QAAQS,OAApC,EACvB2N,GAAsB,SAAC7S,GAAD,OAAsBA,EAAMyE,QAAQ8H,MAApC,EACtBuG,GAA0B,SAAC9S,GAAD,OAAsBA,EAAMyE,QAAQ0N,UAApC,EAIxBY,GAFQd,GAAaxR,QCpC9Be,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsB,KAAM,CACJhC,SAAU,WACVgS,UAAWtR,EAAM4B,QAAQ,IAE3B2P,eAAgB,CACdhQ,QAAS,OACTC,SAAU,aACVC,eAAgB,gBAChBC,WAAY,SACZ8P,aAAcxR,EAAM4B,QAAQ,IAE9B4B,QAAS,CACPlE,SAAU,WACV2F,IAAKjF,EAAM4B,SAAS,GACpBpB,MAAO,QAfkB,IAkBd,SAASiR,KACtB,IAAMC,EAAQC,cACR3U,EAAUgQ,cAEV1K,EAAc5E,EAAeuT,IAC7BR,EAAa/S,EAAe0T,IAC5BvG,EAASnN,EAAeyT,IACxB3N,EAAU9F,EAAewT,IACzBhC,EAAUxR,EAAe6I,IACzBE,EAAW/I,EAAe2I,IAE1BpH,EAAWzB,IACX+C,EAAUT,KAEhBuN,qBAAU,WACRpO,EAAS+R,GAAeL,iBAAiB9F,GAC1C,GAAE,CAAC5L,EAAU4L,IAEd,IAiBM+G,EAAmB,mDAAG,WAAO7O,GAAP,2GAGlB4E,GAAWU,QAAc,OAAPtF,QAAO,IAAPA,OAAA,EAAAA,EAASG,KAAM,IAHf,OAKxBqK,YAAM,4CAAmC,CACvCjO,SAAU,YACVkO,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU7P,IAIN0Q,EAhBkB,eAgBD7D,GACvB5L,EAAS+R,GAAeF,UAAUpC,IAjBV,gDAmBxBnC,QAAQC,IAAI,0BAAZ,MAnBwB,yDAAH,sDAuBnBqF,EAAiB,mDAAG,WAAO9O,GAAP,4EACxB/F,EAAQ8Q,KAAR,UAAgB4D,EAAM1J,IAAtB,YAA6BjF,EAAQG,KADb,2CAAH,sDAGvB,OACE,eAAChE,EAAA,EAAD,CAAK0B,UAAWL,EAAQe,KAAxB,UACGkC,GAAW,cAAC2B,EAAA,EAAD,CAAgBvE,UAAWL,EAAQiD,UAE/C,eAACtE,EAAA,EAAD,CAAK0B,UAAWL,EAAQgR,eAAxB,UACE,cAAC/R,EAAA,EAAD,CAAYC,QAAQ,KAApB,sBAEA,cAAC,IAAD,CAAMlC,GAAE,UAAKmU,EAAM1J,IAAX,QAAsB+F,MAAO,CAAE7N,eAAgB,QAAvD,SACE,cAACP,EAAA,EAAD,CAAQF,QAAQ,YAAYG,MAAM,UAAlC,kCAMJ,cAACV,EAAA,EAAD,CAAK4S,GAAI,EAAT,SACE,cAAC7D,GAAD,CACEpD,OAAQA,EACRpE,SAAUA,EACVyH,eApDmB,SAACQ,GAC1BzP,EAAS+R,GAAeD,sBAAsBrC,GAC/C,EAmDO9F,SAjDmB,SAAC8F,GAC1BzP,EAAS+R,GAAeF,UAAUpC,GACnC,MAoDG,cAACO,GAAD,CACE3M,YAAaA,EACb4M,QAASA,EACTE,SAAUwC,EACVzC,OAAQ0C,IAIV,cAAC3S,EAAA,EAAD,CAAKoE,GAAI,EAAG/B,QAAQ,OAAOE,eAAe,SAA1C,SACE,cAACsQ,GAAA,EAAD,CACEnS,MAAM,UACNoS,MAAOC,KAAKC,KAAKzB,EAAWC,WAAaD,EAAWD,QACpD2B,KAAI,OAAE1B,QAAF,IAAEA,OAAF,EAAEA,EAAY9B,MAClB/F,SAhFiB,SAAC6F,EAAQ0D,GAChClT,EACE+R,GAAeF,UAAf,2BACKjG,GADL,IAEE8D,MAAOwD,KAGZ,QA8EF,CCtIc,SAASC,KACtB,IAAMV,EAAQC,cACR1S,EAAWzB,IAKjB,OAHA6P,qBAAU,WACRpO,EAASmH,GAAYJ,gBACtB,GAAE,CAAC/G,IAEF,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOoT,KAAMX,EAAMW,KAAMC,OAAK,EAA9B,SACE,cAACb,GAAD,MAGF,cAAC,IAAD,CAAOY,KAAI,UAAKX,EAAMW,KAAX,QAAX,SACE,cAACtF,GAAD,MAGF,cAAC,IAAD,CAAOsF,KAAI,UAAKX,EAAMW,KAAX,eAAX,SACE,cAACtF,GAAD,QAIP,CCxBD,IAAMjN,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCsB,KAAM,CACJC,QAAS,OACTgR,iBAAkB,WAClBC,oBAAqB,YACrBC,kBAAkB,iCAClBC,UAAW,SAEbC,OAAQ,CACNC,SAAU,UAEZC,QAAS,CACPD,SAAU,UACVE,YAAY,aAAD,OAAe9S,EAAMI,QAAQ0B,SACxC3B,gBAAiBH,EAAMI,QAAQ2S,WAAWC,OAE5CC,KAAM,CACJL,SAAU,OACVzS,gBAAiBH,EAAMI,QAAQ2S,WAAWC,MAC1CrR,QAAS3B,EAAM4B,QAAQ,EAAG,IAnBD,IAuBtB,SAASsR,KACd,IAAM3S,EAAUT,KAChB,OACE,eAAC,IAAD,CAAKc,UAAWL,EAAQe,KAAxB,UACE,cAAC,IAAD,CAAKV,UAAWL,EAAQoS,OAAxB,SACE,cAAC3T,EAAD,MAEF,cAAC,IAAD,CAAK4B,UAAWL,EAAQsS,QAAxB,SACE,cAACvS,EAAD,MAEF,cAAC,IAAD,CAAKM,UAAWL,EAAQ0S,KAAxB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOZ,KAAK,mBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACE,cAACD,GAAD,aAMX,C,4CC/CKe,GAAWpT,aAAW,SAACC,GAAD,MAAY,CACtCsB,KAAM,CACJC,QAAS,OACTC,SAAU,aACVC,eAAgB,SAChBC,WAAY,SACZgR,UAAW,SAEbU,IAAK,CACHzR,QAAS3B,EAAM4B,QAAQ,IAEzByR,IAAK,CACHC,UAAW,QAZa,IAgBb,SAASC,KACtB,IAAMhT,EAAU4S,KACVlU,EAAWzB,IACXgW,EAAY9V,GAAe,SAACY,GAAD,OAAWA,EAAMmV,KAAK3V,OAAtB,IAMjC,OACE,qBAAK8C,UAAWL,EAAQe,KAAxB,SACE,eAAC,KAAD,CAAOoS,UAAW,EAAG9S,UAAWL,EAAQ6S,IAAxC,UACE,cAAC,KAAD,CAAY3T,QAAQ,KAAKC,UAAU,KAAnC,gCAIA,cAAC,IAAD,CAAKkB,UAAWL,EAAQ8S,IAAxB,SACE,eAAC,KAAD,CAAQnK,WAAS,EAACzJ,QAAQ,YAAYG,MAAM,UAAUC,QAZ1C,WAElBZ,EAASL,EAAYP,MAAM,CAAEsV,SAAU,GAAIC,SAAU,KACtD,EASO,4BAEGJ,GAAa,cAAC,KAAD,CAAkB/Q,KAAM,GAAI7C,MAAM,qBAM3D,CCnBciU,OApBf,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOxB,KAAK,SAAZ,SACE,cAACkB,GAAD,MAGF,cAACrW,EAAD,CAAcmV,KAAK,SAAnB,SACE,cAACa,GAAD,MAGF,cAAC,IAAD,UACE,cAAC7R,EAAD,UAKT,E,6BCvBM,SAASyS,KAAwB,IAAbC,EAAY,uDAAH,EAClC,OAAO,IAAIvM,SAA0B,SAACwM,GAAD,OACnCC,YAAW,kBAAMD,EAAQ,CAAE9N,KAAM6N,GAAtB,GAAiC,IADT,GAGtC,CCID,IAUaG,GAAiBC,YAAiB,qBAAD,mDAAuB,WAAOJ,GAAP,kGAC5CD,GAAWC,GADiC,cAC7DrM,EAD6D,yBAG5DA,EAASxB,MAHmD,2CAAvB,uDAMjCkO,GAAelW,YAAY,CACtCC,KAAM,UACNP,aAlBiC,CACjCsE,MAAO,EACPmS,OAAQ,QAkBRjW,SAAU,CACRkW,UAAW,SAAChW,GAKVA,EAAM4D,OAAS,CAChB,EACDqS,UAAW,SAACjW,GACVA,EAAM4D,OAAS,CAChB,EAEDsS,kBAAmB,SAAClW,EAAOC,GACzBD,EAAM4D,OAAS3D,EAAOE,OACvB,EACDgW,cAAe,SAACnW,EAAOC,GACrBD,EAAM+V,OAAS,SAChB,EACDK,qBAAsB,SAACpW,EAAOC,GAC5BD,EAAM+V,OAAS,OACf/V,EAAM4D,OAAS3D,EAAOE,OACvB,GAIHkW,cAAe,SAACC,GACdA,EACGC,QAAQX,GAAeY,SAAS,SAACxW,GAChCA,EAAM+V,OAAS,SAChB,IACAQ,QAAQX,GAAea,WAAW,SAACzW,EAAOC,GACzCD,EAAM+V,OAAS,OACf/V,EAAM4D,OAAS3D,EAAOE,OACvB,IACAoW,QAAQX,GAAec,UAAU,SAAC1W,GACjCA,EAAM+V,OAAS,QAChB,GACJ,IAGI,GAAyFD,GAAavV,QAArD4V,IAAjD,GAAQH,UAAR,GAAmBC,UAAnB,GAA8BC,kBAA9B,GAAiDC,eAAeC,GAAhE,GAAgEA,qBAkBxDN,MAAf,Q,yCClFUa,I,uBAiBAC,I,uBAQAC,I,uBAaeC,IAtCzB,SAAUH,GAAYxW,GAAtB,4EAEI,OAFJ,kBAEU4W,aAAM,KAFhB,OAII,OADAhY,aAAaiY,QAAQ,eAAgB,cAHzC,SAIUC,aACJ3W,EAAYJ,aAAa,CACvB0E,GAAI,EACJ/E,KAAM,mBAPd,OAWI,OAXJ,SAWUoX,aAAIzH,aAAK,sBAXnB,+BAaI,OAbJ,oCAaUyH,aAAI3W,EAAYF,YAAY,gBAbtC,uDAiBA,SAAUwW,KAAV,4EACE,OADF,SACQG,aAAM,KADd,OAKE,OAHAhY,aAAamY,WAAW,gBAF1B,SAKQD,aAAIzH,aAAK,YALjB,wCAQA,SAAUqH,KAAV,qFAEuB/X,QAAQC,aAAaC,QAAQ,iBAFpD,gBAIkD,OAJlD,SAIwDmY,aAAK7W,EAAYP,MAAMoO,MAJ/E,OAKM,OADMlO,EAJZ,gBAKYmX,aAAKT,GAAa1W,EAAOE,SALrC,OAQI,OARJ,UAQUgX,aAAK7W,EAAYD,OAAO8N,MARlC,QASI,OATJ,UASUkJ,aAAKT,IATf,gEAae,SAAUE,KAAV,4EACb,OADa,SACPM,aAAKP,IADE,wCCxCf,IAYeS,GAZC,CACZhO,OADY,WAGR,OAAOd,GAAYgB,IADT,UACiB,CACvBD,OAAO,CACH8G,MAAM,EACN6B,OAAO,KAGlB,G,uBCPKxK,I,uBAUe6P,IAVzB,SAAU7P,KAAV,kFAEyC,OAFzC,kBAE+C2P,aAAKC,GAAQhO,QAF5D,OAGI,OADMF,EAFV,gBAGU6N,aAAInP,GAAYH,qBAAqByB,IAH/C,8BAMI,OANJ,yBAKI6E,QAAQC,IAAI,4BAAZ,MALJ,UAMU+I,aAAInP,GAAYD,uBAN1B,sDAUe,SAAU0P,KAAV,4EACb,OADa,SACPC,aAAW1P,GAAYJ,cAAcyG,KAAMzG,IADpC,wC,2BCXL+P,I,uBAOeC,IAPzB,SAAUD,GAAoBxX,GAA9B,4EAEE,OADAgO,QAAQC,IAAI,cADd,SAEQmJ,aAAKN,KAAO,KAFpB,OAIE,OADA9I,QAAQC,IAAI,mBAHd,SAIQ+I,aAAIb,GAAqBnW,EAAOE,UAJxC,wCAOe,SAAUuX,KAAV,4EACb,OADa,SACPC,aAAUxB,GAAcyB,WAAYH,IAD7B,wC,2BCLLI,I,uBAeAC,I,uBAUAC,I,uBAUAC,I,uBAyBAC,I,uBAeeC,IA3EzB,SAAUL,KAAV,8FACqD,OADrD,SAC2DM,aAAI,CAC3Dd,aAAKhO,GAAWC,OAAQ,CAAE+G,MAAO,EAAG6B,OAAQ,EAAGlF,OAAQ,SACvDqK,aAAKhO,GAAWC,OAAQ,CAAE+G,MAAO,EAAG6B,OAAQ,EAAGlF,OAAQ,WACvDqK,aAAKhO,GAAWC,OAAQ,CAAE+G,MAAO,EAAG6B,OAAQ,EAAGkG,SAAU,IACzDf,aAAKhO,GAAWC,OAAQ,CAAE+G,MAAO,EAAG6B,OAAQ,EAAGmG,SAAU,MAL7D,OAUE,OATMC,EADR,OAOQC,EAAgBD,EAAa9T,KAAI,SAACgI,GAAD,OAAOA,EAAE2F,WAAWC,UAApB,IAPzC,eAQgEmG,EARhE,GAQSnT,EART,KAQoBC,EARpB,KAQiCC,EARjC,KAQgDC,EARhD,cAUQ0R,aACJ/Q,GAAiBJ,cAAc,CAAEV,YAAWC,cAAaC,gBAAeC,kBAX5E,wCAeA,SAAUuS,KAAV,oFAC0C,OAD1C,SACgDT,aAAKhO,GAAWC,OAAQ,CACpE+G,MAAO,EACP6B,OAAQ,EACR1B,MAAO,OACPC,OAAQ,SALZ,OAOE,OAPF,SACU7I,EADV,EACUA,KADV,SAOQqP,aAAI/Q,GAAiBH,sBAAsB6B,IAPnD,wCAUA,SAAUmQ,KAAV,oFAC0C,OAD1C,SACgDV,aAAKhO,GAAWC,OAAQ,CACpE+G,MAAO,EACP6B,OAAQ,EACR1B,MAAO,OACPC,OAAQ,QALZ,OAOE,OAPF,SACU7I,EADV,EACUA,KADV,SAOQqP,aAAI/Q,GAAiBF,qBAAqB4B,IAPlD,wCAUA,SAAUoQ,KAAV,0FAEiD,OAFjD,SAEuDX,aAAKC,GAAQhO,QAFpE,OAcqD,OAdrD,SAEgBnB,EAFhB,EAEUP,KAGF4Q,EAAWrQ,EAAS3D,KAAI,SAACgI,GAAD,OAC5B6K,aAAKhO,GAAWC,OAAQ,CACtB+G,MAAO,EACP6B,OAAQ,EACR1B,MAAO,OACPC,OAAQ,OACRzI,KAAMwE,EAAEnE,MANkB,IALhC,SAc2D8P,aAAIK,GAd/D,OAsBE,OARMF,EAdR,OAeQ5S,EAA0C4S,EAAa9T,KAAI,SAACgI,EAAG9H,GAAJ,MAAa,CAC5E6C,OAAQY,EAASzD,GAAK2D,KACtBhB,SAAUc,EAASzD,GAAK7E,KACxByH,YAAakF,EAAE5E,KAHgD,IAfnE,UAsBQqP,aAAI/Q,GAAiBD,qBAAqBP,IAtBlD,yCAyBA,SAAUuS,KAAV,4EAEI,OAFJ,kBAEUE,aAAI,CACRd,aAAKQ,IACLR,aAAKS,IACLT,aAAKU,IACLV,aAAKW,MANX,OAQI,OARJ,SAQUf,aAAI/Q,GAAiBN,oBAR/B,8BAWI,OAXJ,yBAUIqI,QAAQC,IAAI,iCAAZ,MAVJ,UAWU+I,aAAI/Q,GAAiBN,oBAX/B,sDAee,SAAUsS,KAAV,4EACb,OADa,SACPV,aAAWtR,GAAiBP,UAAUwI,KAAM8J,IADrC,wC,2BC3EL5F,I,uBAUAoG,I,uBAIeC,IAdzB,SAAUrG,GAAiBpS,GAA3B,kFAE4C,OAF5C,kBAEkDoX,aAAKhO,GAAWC,OAAQrJ,EAAOE,SAFjF,OAGI,OADMiJ,EAFV,gBAGU6N,aAAIvE,GAAeJ,wBAAwBlJ,IAHrD,8BAMI,OANJ,yBAKI6E,QAAQC,IAAI,+BAAZ,MALJ,UAMU+I,aAAIvE,GAAeH,0BAN7B,sDAUA,SAAUkG,GAAqBxY,GAA/B,4EACE,OADF,SACQgX,aAAIvE,GAAeF,UAAUvS,EAAOE,UAD5C,wCAIe,SAAUuY,KAAV,4EACb,OADa,SACPlB,aAAW9E,GAAeL,iBAAkBA,IADrC,OAGb,OAHa,SAGPsG,aAAS,IAAKjG,GAAeD,sBAAsBtE,KAAMsK,IAHlD,wC,2BCbUG,IAAV,SAAUA,KAAV,4EACb,OADa,SACPT,aAAI,CAACT,KAAeZ,KAAYoB,KAAiBQ,KAAenB,OADzD,wCCIf,IAAMsB,GAAcC,aAAgB,CAClCC,OAAQC,YAActa,GACtBua,QAASC,GACT/D,KAAM3U,EACN4F,UAAWK,GACXhC,QAASsO,GACT/K,KAAMO,KAEF4Q,GAAiBC,eACVC,GAAQC,YAAe,CAClC7Y,QAASoY,GACTU,WAAY,SAACC,GAAD,OACVA,IAAuBC,OAAON,GAAgBO,aAAiBhb,GADrD,IAIdya,GAAeQ,IAAIf,I,OCdC9Z,QACW,cAA7B8a,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1G,MAAM,2DCDnC2G,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAUZ,MAAOA,GAAjB,UACE,eAAC,IAAD,CAAiB3a,QAASA,EAA1B,UACE,cAACwb,EAAA,EAAD,IACA,cAAC,GAAD,OAGF,cAAC,IAAD,CACElZ,SAAS,YACTkO,UAAW,IACXC,iBAAiB,EACjBgL,aAAa,EACb/K,cAAY,EACZgL,KAAK,EACLC,kBAAgB,EAChB/K,WAAS,EACTD,cAAY,SAIlBiL,SAASC,eAAe,SD+FpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,YACd,IACAC,OAAM,SAAC7R,GACNgF,QAAQhF,MAAMA,EAAM+B,QACrB,G","file":"static/js/main.241df4dd.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\r\n\r\nexport const history = createBrowserHistory();\r\n","import { Redirect, Route, RouteProps } from 'react-router-dom';\r\n\r\nexport function PrivateRoute(props: RouteProps) {\r\n  const isLoggedIn = Boolean(localStorage.getItem('access_token'));\r\n  if (!isLoggedIn) return <Redirect to=\"/login\" />;\r\n  return <Route {...props} />;\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { User } from 'models/user';\r\n\r\nexport interface LoginPayload {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport interface AuthState {\r\n  isLoggedIn: boolean;\r\n  logging?: boolean;\r\n  currentUser?: User;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  isLoggedIn: false,\r\n  logging: false,\r\n  currentUser: undefined,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    login(state, action: PayloadAction<LoginPayload>) {\r\n      state.logging = true;\r\n    },\r\n    loginSuccess(state, action: PayloadAction<User>) {\r\n      state.logging = false;\r\n      state.currentUser = action.payload;\r\n    },\r\n    loginFailed(state, action: PayloadAction<string>) {\r\n      state.logging = false;\r\n    },\r\n\r\n    logout(state) {\r\n      state.isLoggedIn = false;\r\n      state.currentUser = undefined;\r\n    },\r\n  },\r\n});\r\n\r\n// Action\r\nexport const authActions = authSlice.actions;\r\n\r\n// Selector\r\nexport const selectIsLoggedIn = (state: any) => state.auth.isLoggedIn;\r\nexport const selectIsLogging = (state: any) => state.auth.logging;\r\n\r\n// Reducer\r\nconst authReducer = authSlice.reducer;\r\nexport default authReducer;\r\n","import AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useAppDispatch } from 'app/hooks';\r\nimport { authActions } from 'features/auth/authSlice';\r\n\r\nexport function Header() {\r\n  const dispatch = useAppDispatch();\r\n  const handleLogoutClick = () => {\r\n    dispatch(authActions.logout());\r\n  };\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Student Management\r\n          </Typography>\r\n          <Button color=\"inherit\" onClick={handleLogoutClick}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { Dashboard, People } from '@mui/icons-material';\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n    '&.active > li':{\r\n      backgroundColor:theme.palette.action.selected,\r\n    }\r\n  },\r\n}));\r\n\r\nexport function Sidebar() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n      <nav aria-label=\"main mailbox folders\">\r\n        <List>\r\n          <NavLink to=\"/admin/dashboard\" className={classes.link}>\r\n            <ListItem disablePadding>\r\n              <ListItemButton>\r\n                <ListItemIcon>\r\n                  <Dashboard />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          </NavLink>\r\n\r\n          <NavLink to=\"/admin/students\" className={classes.link}>\r\n            <ListItem disablePadding>\r\n              <ListItemButton>\r\n                <ListItemIcon>\r\n                  <People />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Students\" />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          </NavLink>\r\n        </List>\r\n      </nav>\r\n    </Box>\r\n  );\r\n}\r\n","import { Redirect, RouteProps } from 'react-router-dom';\r\n\r\nexport function DefaultRoute(props: RouteProps) {\r\n  const isLoggedIn = Boolean(localStorage.getItem('access_token'));\r\n  if (!isLoggedIn) return <Redirect to=\"/login\" />;\r\n  return (\r\n    <Redirect to=\"/admin/dashboard\" />\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { Box, Paper, Typography } from '@mui/material';\r\nimport * as React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(2),\r\n    border: `1px solid ${theme.palette.divider}`\r\n  },\r\n}));\r\nexport interface StatisticItemProps {\r\n  icon: React.ReactElement;\r\n  label: string;\r\n  value: string | number;\r\n}\r\n\r\nexport default function StatisticItem({ icon, label, value }: StatisticItemProps) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Box>{icon}</Box>\r\n        <Box>\r\n          <Typography variant=\"h5\" align='right'>{value}</Typography>\r\n          <Typography variant=\"subtitle1\">{label}</Typography>\r\n        </Box>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Student } from 'models';\r\n\r\nexport interface StudentRankingListProps {\r\n  studentList: Student[];\r\n}\r\n\r\nexport default function StudentRankingList({ studentList }: StudentRankingListProps) {\r\n  return (\r\n    <TableContainer>\r\n      <Table size=\"small\" aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\">#</TableCell>\r\n            <TableCell align=\"left\">Name</TableCell>\r\n            <TableCell align=\"right\">Mark</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {studentList.map((student, idx) => (\r\n            <TableRow key={student.id}>\r\n              <TableCell align=\"center\">{idx + 1}</TableCell>\r\n              <TableCell align=\"left\">{student.name}</TableCell>\r\n              <TableCell align=\"right\">{student.mark}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { Box, Paper, Typography } from '@mui/material';\r\nimport * as React from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    border: `1px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\nexport interface WidgetProps {\r\n  title: string;\r\n  children: any;\r\n}\r\n\r\nexport default function Widget({ title, children }: WidgetProps) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Typography variant=\"button\">{title}</Typography>\r\n      <Box mt={2}>{children}</Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\nimport { Student } from 'models';\r\n\r\nexport interface DashboardStatistics {\r\n  maleCount: number;\r\n  femaleCount: number;\r\n  highMarkCount: number;\r\n  lowMarkCount: number;\r\n}\r\n\r\nexport interface RankingByCity {\r\n  cityId: string;\r\n  cityName: string;\r\n  rankingList: Student[];\r\n}\r\n\r\nexport interface DashboardState {\r\n  loading: boolean;\r\n  statistics: DashboardStatistics;\r\n  highestStudentList: Student[];\r\n  lowestStudentList: Student[];\r\n  rankingByCityList: RankingByCity[];\r\n}\r\n\r\nconst initialState: DashboardState = {\r\n  loading: false,\r\n  statistics: {\r\n    maleCount: 0,\r\n    femaleCount: 0,\r\n    highMarkCount: 0,\r\n    lowMarkCount: 0,\r\n  },\r\n  highestStudentList: [],\r\n  lowestStudentList: [],\r\n  rankingByCityList: [],\r\n};\r\nconst dashboardSlice = createSlice({\r\n  name: 'dashboard',\r\n  initialState,\r\n  reducers: {\r\n    fetchData(state) {\r\n      state.loading = true;\r\n    },\r\n    fetchDataSuccess(state) {\r\n      state.loading = false;\r\n    },\r\n    fetchDataFailed(state) {\r\n      state.loading = false;\r\n    },\r\n\r\n    setStatistics(state, action: PayloadAction<DashboardStatistics>) {\r\n      state.statistics = action.payload;\r\n    },\r\n    setHighestStudentList(state, action: PayloadAction<Student[]>) {\r\n      state.highestStudentList = action.payload;\r\n    },\r\n    setLowestStudentList(state, action: PayloadAction<Student[]>) {\r\n      state.lowestStudentList = action.payload;\r\n    },\r\n    setRankingByCityList(state, action: PayloadAction<RankingByCity[]>) {\r\n      state.rankingByCityList = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action\r\nexport const dashboardActions = dashboardSlice.actions;\r\n\r\n// Selectors\r\nexport const selectDashboardLoading = (state: RootState) => state.dashboard.loading;\r\nexport const selectDashboardStatistics = (state: RootState) => state.dashboard.statistics;\r\nexport const selectHighestStudentList = (state: RootState) => state.dashboard.highestStudentList;\r\nexport const selectLowestStudentList = (state: RootState) => state.dashboard.lowestStudentList;\r\nexport const selectRankingByCityList = (state: RootState) => state.dashboard.rankingByCityList;\r\n\r\n// Reducer\r\n\r\nconst dashboardReducer = dashboardSlice.reducer;\r\nexport default dashboardReducer;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport BookmarkAddedTwoToneIcon from '@mui/icons-material/BookmarkAddedTwoTone';\r\nimport BookmarkAddTwoToneIcon from '@mui/icons-material/BookmarkAddTwoTone';\r\nimport FemaleTwoToneIcon from '@mui/icons-material/FemaleTwoTone';\r\nimport MaleTwoToneIcon from '@mui/icons-material/MaleTwoTone';\r\nimport { Box, Grid, LinearProgress, Typography } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\r\nimport * as React from 'react';\r\nimport StatisticItem from './components/StatisticItem';\r\nimport StudentRankingList from './components/StudentRankingList';\r\nimport Widget from './components/Widget';\r\nimport {\r\n  dashboardActions,\r\n  selectDashboardLoading,\r\n  selectDashboardStatistics,\r\n  selectHighestStudentList,\r\n  selectLowestStudentList,\r\n  selectRankingByCityList,\r\n} from './dashboardSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'relative',\r\n    paddingTop: theme.spacing(2),\r\n  },\r\n  loading: {\r\n    position: 'absolute',\r\n    top: theme.spacing(-1),\r\n  },\r\n}));\r\nexport default function Dashboard() {\r\n  const dispatch = useAppDispatch();\r\n  const loading = useAppSelector(selectDashboardLoading);\r\n  const statistics = useAppSelector(selectDashboardStatistics);\r\n  const highestStudentList = useAppSelector(selectHighestStudentList);\r\n  const lowestStudentList = useAppSelector(selectLowestStudentList);\r\n  const rankingByCityList = useAppSelector(selectRankingByCityList);\r\n\r\n  const classes = useStyles();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(dashboardActions.fetchData());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      {/* Loading */}\r\n      {loading && <LinearProgress className={classes.loading} />}\r\n\r\n      {/* Statistic Section */}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <StatisticItem\r\n            icon={<MaleTwoToneIcon fontSize=\"large\" color=\"primary\" />}\r\n            label=\"male\"\r\n            value={statistics.maleCount}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <StatisticItem\r\n            icon={<FemaleTwoToneIcon fontSize=\"large\" color=\"primary\" />}\r\n            label=\"female\"\r\n            value={statistics.femaleCount}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <StatisticItem\r\n            icon={<BookmarkAddedTwoToneIcon fontSize=\"large\" color=\"primary\" />}\r\n            label=\"mark >= 8\"\r\n            value={statistics.highMarkCount}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <StatisticItem\r\n            icon={<BookmarkAddTwoToneIcon fontSize=\"large\" color=\"primary\" />}\r\n            label=\"mark <= 5\"\r\n            value={statistics.lowMarkCount}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* All student ranking */}\r\n      <Box mt={3}>\r\n        <Typography variant=\"h4\">All Students</Typography>\r\n\r\n        <Box mt={2}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={6} lg={3}>\r\n              <Widget title=\"Student with highest mark\">\r\n                <StudentRankingList studentList={highestStudentList} />\r\n              </Widget>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6} lg={3}>\r\n              <Widget title=\"Student with lowest mark\">\r\n                <StudentRankingList studentList={lowestStudentList} />\r\n              </Widget>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n      {/* Ranking by city */}\r\n      <Box mt={3}>\r\n        <Typography variant=\"h4\">Ranking By City</Typography>\r\n\r\n        <Box mt={2}>\r\n          <Grid container spacing={3}>\r\n            {rankingByCityList.map((item) => (\r\n              <Grid key={item.cityId} item xs={12} md={6} lg={3}>\r\n                <Widget title={item.cityName}>\r\n                  <StudentRankingList studentList={item.rankingList} />\r\n                </Widget>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\nimport { City, ListResponse } from 'models';\r\n\r\nexport interface CityState {\r\n  loading: boolean;\r\n  list: City[];\r\n}\r\n\r\nconst initialState: CityState = {\r\n  loading: false,\r\n  list: [],\r\n};\r\n\r\nconst citySlice = createSlice({\r\n  name: 'city',\r\n  initialState,\r\n  reducers: {\r\n    fetchCityList(state) {\r\n      state.loading = true;\r\n    },\r\n    fetchCityListSuccess(state, action: PayloadAction<ListResponse<City>>) {\r\n      state.loading = false;\r\n      state.list = action.payload.data;\r\n    },\r\n    fetchCityListFailed(state) {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\n// Action\r\nexport const cityActions = citySlice.actions;\r\n\r\n// Selectors\r\nexport const selectCityList = (state: RootState) => state.city.list;\r\n\r\nexport const selectCityMap = createSelector(selectCityList, (cityList) =>\r\n  cityList.reduce((map: { [key: string]: City }, city) => {\r\n    map[city.code] = city;\r\n    return map;\r\n  }, {})\r\n);\r\n\r\nexport const selectCityOptions = createSelector(selectCityList, (cityList) =>\r\n  cityList.map((city) => ({\r\n    label: city.name,\r\n    value: city.code,\r\n  }))\r\n);\r\n\r\n// Reducer\r\nconst cityReducer = citySlice.reducer;\r\nexport default cityReducer;\r\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: 'http://js-post-api.herokuapp.com/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\naxiosClient.interceptors.request.use(\r\n  function (config: AxiosRequestConfig) {\r\n    // Do something before request is sent\r\n    return config;\r\n  },\r\n  function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\naxiosClient.interceptors.response.use(\r\n  function (response: AxiosResponse) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n    return response.data;\r\n  },\r\n  function (error) {\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosClient","import { ListParams, ListResponse, Student } from 'models';\r\nimport axiosClient from './axiosClient';\r\n\r\nconst studentApi = {\r\n  getAll(params: ListParams): Promise<ListResponse<Student>> {\r\n    const url = '/students';\r\n    return axiosClient.get(url, { params });\r\n  },\r\n\r\n  getById(id: string): Promise<Student> {\r\n    const url = `/students/${id}`;\r\n    return axiosClient.get(url);\r\n  },\r\n\r\n  add(data: Student): Promise<Student> {\r\n    const url = '/students';\r\n    return axiosClient.post(url, data);\r\n  },\r\n\r\n  update(data: Partial<Student>): Promise<Student> {\r\n    const url = `/students/${data.id}`;\r\n    return axiosClient.patch(url, data);\r\n  },\r\n\r\n  remove(id: string): Promise<any> {\r\n    const url = `/students/${id}`;\r\n    return axiosClient.delete(url);\r\n  },\r\n};\r\n\r\nexport default studentApi;\r\n","import { TextField } from '@mui/material';\r\nimport { InputHTMLAttributes } from 'react';\r\nimport { Control, useController } from 'react-hook-form';\r\n\r\nexport interface InputFieldProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  control: Control<any>;\r\n  label?: string;\r\n}\r\n\r\nexport function InputField({ name, control, label, ...inputProps }: InputFieldProps) {\r\n  const {\r\n    field: { value, onChange, onBlur, ref },\r\n    fieldState: { invalid, error },\r\n  } = useController({\r\n    name,\r\n    control,\r\n  });\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      size=\"small\"\r\n      margin=\"normal\"\r\n      value={value}\r\n      onChange={onChange}\r\n      onBlur={onBlur}\r\n      label={label}\r\n      variant=\"outlined\"\r\n      inputRef={ref}\r\n      error={invalid}\r\n      helperText={error?.message}\r\n      inputProps={inputProps}\r\n    />\r\n  );\r\n}\r\n","import { FormHelperText } from '@mui/material';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport { Control, useController } from 'react-hook-form';\r\n\r\nexport interface RadioOption {\r\n  label?: string;\r\n  value: number | string;\r\n}\r\n\r\nexport interface RadioGroupFieldProps {\r\n  name: string;\r\n  control: Control<any>;\r\n  label?: string;\r\n  disabled?: boolean;\r\n  options: RadioOption[];\r\n}\r\n\r\nexport function RadioGroupField({ name, control, label, disabled, options }: RadioGroupFieldProps) {\r\n  const {\r\n    field: { value, onChange, onBlur },\r\n    fieldState: { invalid, error },\r\n  } = useController({\r\n    name,\r\n    control,\r\n  });\r\n  return (\r\n    <FormControl disabled={disabled} margin=\"normal\" component=\"fieldset\" error={invalid}>\r\n      <FormLabel component=\"legend\">{label}</FormLabel>\r\n      <RadioGroup row name={name} value={value} onChange={onChange} onBlur={onBlur}>\r\n        {options.map((option) => (\r\n          <FormControlLabel\r\n            key={option.value}\r\n            value={option.value}\r\n            control={<Radio />}\r\n            label={option.label}\r\n          />\r\n        ))}\r\n      </RadioGroup>\r\n\r\n      <FormHelperText>{error?.message}</FormHelperText>\r\n    </FormControl>\r\n  );\r\n}\r\n","import { FormHelperText, MenuItem, Select } from '@mui/material';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport { Control, useController } from 'react-hook-form';\r\n\r\nexport interface SelectOption {\r\n  label?: string;\r\n  value: number | string;\r\n}\r\n\r\nexport interface SelectFieldProps {\r\n  name: string;\r\n  control: Control<any>;\r\n  label?: string;\r\n  disabled?: boolean;\r\n  options: SelectOption[];\r\n}\r\n\r\nexport function SelectField({ name, control, label, disabled, options }: SelectFieldProps) {\r\n  const {\r\n    field: { value, onChange, onBlur },\r\n    fieldState: { invalid, error },\r\n  } = useController({\r\n    name,\r\n    control,\r\n  });\r\n  return (\r\n    <FormControl\r\n      fullWidth\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      size=\"small\"\r\n      disabled={disabled}\r\n      error={invalid}\r\n    >\r\n      <InputLabel id={`${name}_label`}>{label}</InputLabel>\r\n      <Select\r\n        labelId={`${name}_label`}\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        label={label}\r\n      >\r\n        {options.map((option) => (\r\n          <MenuItem value={option.value} key={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n\r\n      <FormHelperText>{error?.message}</FormHelperText>\r\n    </FormControl>\r\n  );\r\n}\r\n","import { yupResolver } from '@hookform/resolvers/yup';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { Box, Button, CircularProgress } from '@mui/material';\r\nimport { useAppSelector } from 'app/hooks';\r\nimport { InputField, RadioGroupField, SelectField } from 'components/FormFields';\r\nimport { selectCityOptions } from 'features/city/citySlice';\r\nimport { Student } from 'models';\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\n\r\nexport interface StudentFormProps {\r\n  initialValues?: Student;\r\n  onSubmit?: (formValues: Student) => void;\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required()\r\n    .test('two-words', 'Please enter at least two words', (value) => {\r\n      if (!value) return true;\r\n      const parts = value?.split(' ') || [];\r\n      return parts.filter((x) => Boolean(x)).length >= 2;\r\n    }),\r\n  age: yup\r\n    .number()\r\n    .positive('Please enter a positive number.')\r\n    .min(18, 'Min is 18')\r\n    .max(60, 'Max is 60')\r\n    .integer('please enter an interger')\r\n    .required('please enter age.')\r\n    .typeError('Please enter a valid number.'),\r\n  mark: yup\r\n    .number()\r\n    .min(0, 'Min is 0')\r\n    .max(10, 'Max is 10')\r\n    .required('Please enter mark.')\r\n    .typeError('Please enter a valid number.'),\r\n  gender: yup\r\n    .string()\r\n    .oneOf(['male', 'female'], 'Please select either male or female.')\r\n    .required('Please select gender.'),\r\n  city: yup.string().required('Please select city.'),\r\n});\r\n\r\nexport default function StudentForm({ initialValues, onSubmit }: StudentFormProps) {\r\n  const cityOptions = useAppSelector(selectCityOptions);\r\n  const [error, setError] = useState<string>('');\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = useForm<Student>({\r\n    defaultValues: initialValues,\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const handleFormSubmit = async (formValues: Student) => {\r\n    try {\r\n      // clear previour submission error\r\n      setError('');\r\n      await onSubmit?.(formValues);\r\n    } catch (error) {\r\n      //   setError(error.message);\r\n      console.log('Failed to submit data');\r\n    }\r\n  };\r\n  return (\r\n    <Box maxWidth={400}>\r\n      <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n        <InputField name=\"name\" control={control} label=\"Full Name\" />\r\n\r\n        <RadioGroupField\r\n          name=\"gender\"\r\n          control={control}\r\n          label=\"Gender\"\r\n          options={[\r\n            { label: 'Male', value: 'male' },\r\n            { label: 'Female', value: 'female' },\r\n          ]}\r\n        />\r\n        <InputField name=\"age\" control={control} label=\"Age\" type=\"number\" />\r\n        <InputField name=\"mark\" control={control} label=\"Mark\" type=\"number\" />\r\n\r\n        {Array.isArray(cityOptions) && cityOptions.length > 0 && (\r\n          <SelectField name=\"city\" control={control} label=\"City\" options={cityOptions} />\r\n        )}\r\n\r\n        {error && <Alert severity=\"error\">{error}</Alert>}\r\n\r\n        <Box mt={3}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={isSubmitting}>\r\n            {isSubmitting && <CircularProgress size={16} color=\"primary\" />}&nbsp;Save\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n","import { ChevronLeft } from '@mui/icons-material';\r\nimport { Box, Typography } from '@mui/material';\r\nimport studentApi from 'api/studentApi';\r\nimport { Student } from 'models';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport StudentForm from '../components/StudentForm';\r\n\r\nexport default function AddEditPage() {\r\n  const history = useHistory();\r\n  const { studentId } = useParams<{ studentId: string }>();\r\n  const isEdit = Boolean(studentId);\r\n  const [student, setStudent] = useState<Student>();\r\n\r\n  useEffect(() => {\r\n    if (!studentId) return;\r\n\r\n    // IFFE\r\n    (async () => {\r\n      try {\r\n        const data: Student = await studentApi.getById(studentId);\r\n        setStudent(data);\r\n      } catch (error) {\r\n        console.log('Faile to fetch student details', error);\r\n      }\r\n    })();\r\n  }, [studentId]);\r\n\r\n  const handleStudentFormSubmit = async (formValues: Student) => {\r\n    if (isEdit) {\r\n      await studentApi.update(formValues);\r\n    } else {\r\n      await studentApi.add(formValues);\r\n    }\r\n\r\n    // toast message\r\n    toast('🦄 Save student successfully!', {\r\n      position: 'top-right',\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n\r\n    // Redirect back to student list\r\n    history.push('/admin/students');\r\n  };\r\n  const initialValues: Student = {\r\n    name: '',\r\n    age: '',\r\n    mark: '',\r\n    gender: 'male',\r\n    city: '',\r\n    ...student,\r\n  } as Student;\r\n\r\n  return (\r\n    <Box>\r\n      <Link to=\"/admin/students\">\r\n        <Typography variant=\"caption\" style={{ display: 'flex', alignItems: 'center' }}>\r\n          <ChevronLeft /> Back to student list\r\n        </Typography>\r\n      </Link>\r\n\r\n      <Typography variant=\"h4\">{isEdit ? 'Update student info' : 'Add new student'}</Typography>\r\n\r\n      {(!isEdit || Boolean(student)) && (\r\n        <Box mt={3}>\r\n          <StudentForm initialValues={initialValues} onSubmit={handleStudentFormSubmit} />\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import { SearchOutlined } from '@material-ui/icons';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n  SelectChangeEvent,\r\n} from '@mui/material';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport { City, ListParams } from 'models';\r\nimport { ChangeEvent, useRef } from 'react';\r\n\r\nexport interface StudentFilterProps {\r\n  filter: ListParams;\r\n  onChange?: (newFilter: ListParams) => void;\r\n  onSearchChange?: (newFilter: ListParams) => void;\r\n  cityList: City[];\r\n}\r\n\r\nexport default function StudentFilter({\r\n  filter,\r\n  cityList,\r\n  onChange,\r\n  onSearchChange,\r\n}: StudentFilterProps) {\r\n  const searchRef = useRef<HTMLInputElement>();\r\n\r\n  const handleSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (!onSearchChange) return;\r\n    const newFilter: ListParams = {\r\n      ...filter,\r\n      _page: 1,\r\n      name_like: e.target.value,\r\n    };\r\n    onSearchChange(newFilter);\r\n  };\r\n\r\n  const handleCityChange = (e: SelectChangeEvent<{ name?: string; value: unknown }>) => {\r\n    if (!onChange) return;\r\n    const newFilter: ListParams = {\r\n      ...filter,\r\n      _page: 1,\r\n      city: e.target.value || undefined,\r\n    };\r\n    onChange(newFilter);\r\n  };\r\n\r\n  const handleSortChange = (e: SelectChangeEvent) => {\r\n    if (!onChange) return;\r\n\r\n    const value = e.target.value;\r\n    const [_sort, _order] = (value as string).split('.');\r\n    const newFilter: ListParams = {\r\n      ...filter,\r\n      _sort: _sort || undefined,\r\n      _order: (_order as 'asc' | 'desc') || undefined,\r\n    };\r\n    onChange(newFilter);\r\n  };\r\n\r\n  const handleClearFilter = () => {\r\n    if (!onChange) return;\r\n\r\n    const newFilter: ListParams = {\r\n      ...filter,\r\n      _page: 1,\r\n      _sort: undefined,\r\n      _order: undefined,\r\n      city: undefined,\r\n      name_like: undefined,\r\n    };\r\n    onChange(newFilter);\r\n    if (searchRef.current) {\r\n      searchRef.current.value = '';\r\n    }\r\n  };\r\n  return (\r\n    <Box>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n            <InputLabel htmlFor=\"searchByName\">Search by name</InputLabel>\r\n            <OutlinedInput\r\n              id=\"SearchByName\"\r\n              endAdornment={<SearchOutlined />}\r\n              label=\"Search by name\"\r\n              onChange={handleSearchChange}\r\n              inputRef={searchRef}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <FormControl fullWidth size=\"small\">\r\n            <InputLabel id=\"filterByCity\">Filter by city</InputLabel>\r\n            <Select\r\n              labelId=\"filterByCity\"\r\n              label=\"Filter by city\"\r\n              value={filter.city || ''}\r\n              onChange={handleCityChange}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>All</em>\r\n              </MenuItem>\r\n              {cityList.map((city) => (\r\n                <MenuItem key={city.code} value={city.code}>\r\n                  {city.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={2}>\r\n          <FormControl fullWidth size=\"small\">\r\n            <InputLabel id=\"sortBy\">Sort</InputLabel>\r\n            <Select\r\n              labelId=\"sortBy\"\r\n              value={filter._sort ? `${filter._sort}.${filter._order}` : ''}\r\n              onChange={handleSortChange}\r\n              label=\"Sort\"\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>No sort</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"name.asc\">Name ASC</MenuItem>\r\n              <MenuItem value=\"name.desc\">Name DESC</MenuItem>\r\n              <MenuItem value=\"mark.asc\">Mark ASC</MenuItem>\r\n              <MenuItem value=\"mark.desc\">Mark DESC</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={1}>\r\n          <Button variant=\"outlined\" color=\"primary\" fullWidth onClick={handleClearFilter}>\r\n            Clear\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Button, Paper } from '@mui/material';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { City, Student } from 'models';\r\nimport { useState } from 'react';\r\nimport { capitalizeString, getMarkColor } from 'utils';\r\n\r\nexport interface StudentTableProps {\r\n  studentList: Student[];\r\n  cityMap: {\r\n    [key: string]: City;\r\n  };\r\n  onEdit?: (student: Student) => void;\r\n  onRemove?: (student: Student) => void;\r\n}\r\n\r\nexport default function StudentTable({\r\n  studentList,\r\n  cityMap,\r\n  onEdit,\r\n  onRemove,\r\n}: StudentTableProps) {\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedStudent, setSelectedStudent] = useState<Student>();\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleRemoveClick = (student: Student) => {\r\n    setSelectedStudent(student);\r\n    setOpen(true);\r\n  };\r\n  const handleRemoveComfirm = (student: Student) => {\r\n    onRemove?.(student);\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\" aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>ID</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Gender</TableCell>\r\n              <TableCell>Mark</TableCell>\r\n              <TableCell>City</TableCell>\r\n              <TableCell align=\"right\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {studentList.map((student, idx) => (\r\n              <TableRow key={student.id}>\r\n                <TableCell>{student.id}</TableCell>\r\n                <TableCell>{student.name}</TableCell>\r\n                <TableCell>{capitalizeString(student.gender)}</TableCell>\r\n                <TableCell>\r\n                  <Box color={getMarkColor(student.mark)} fontWeight=\"bold\">\r\n                    {student.mark}\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell>{cityMap[student.city]?.name}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Button\r\n                    sx={{ marginRight: '8px' }}\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    onClick={() => onEdit?.(student)}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n\r\n                  <Button size=\"small\" color=\"secondary\" onClick={() => handleRemoveClick(student)}>\r\n                    Remove\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {/* Remove dialog */}\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Remove a student?</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure to remove student named \"{selectedStudent?.name}\".\r\n            <br />\r\n            This action can&apos;t be undo\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} variant=\"outlined\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleRemoveComfirm(selectedStudent as Student)}\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            autoFocus\r\n          >\r\n            Remove\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","export const capitalizeString = (str: string) => {\r\n  if (!str) return '';\r\n  return `${str[0].toUpperCase()}${str.slice(1)}`;\r\n};\r\n\r\nexport const getMarkColor = (mark: number): string => {\r\n  if (mark >= 8) return 'green';\r\n  if (mark >= 4) return 'goldenrod';\r\n  return 'red';\r\n};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\nimport { ListParams, ListResponse, PaginationParams, Student } from 'models';\r\n\r\nexport interface StudentState {\r\n  loading?: boolean;\r\n  list: Student[];\r\n  filter: ListParams;\r\n  pagination: PaginationParams;\r\n}\r\n\r\nconst initialState: StudentState = {\r\n  loading: false,\r\n  list: [],\r\n  filter: {\r\n    _page: 1,\r\n    _limit: 15,\r\n  },\r\n  pagination: {\r\n    _page: 1,\r\n    _limit: 15,\r\n    _totalRows: 15,\r\n  },\r\n};\r\nconst studentSlice = createSlice({\r\n  name: 'student',\r\n  initialState,\r\n  reducers: {\r\n    fetchStudentList(state, action: PayloadAction<ListParams>) {\r\n      state.loading = true;\r\n    },\r\n    fetchStudentListSuccess(state, action: PayloadAction<ListResponse<Student>>) {\r\n      state.list = action.payload.data;\r\n      state.pagination = action.payload.pagination;\r\n      state.loading = false;\r\n    },\r\n    fetchStudentListFailed(state) {\r\n      state.loading = false;\r\n    },\r\n\r\n    setFilter(state, action: PayloadAction<ListParams>) {\r\n      state.filter = action.payload;\r\n    },\r\n    setFilterWithDebounce(state, action: PayloadAction<ListParams>) {},\r\n  },\r\n});\r\n\r\n// Actions\r\nexport const studentActions = studentSlice.actions;\r\n\r\n// Selectors\r\nexport const selectStudentList = (state: RootState) => state.student.list;\r\nexport const selectStudentLoading = (state: RootState) => state.student.loading;\r\nexport const selectStudentFilter = (state: RootState) => state.student.filter;\r\nexport const selectStudentPagination = (state: RootState) => state.student.pagination;\r\n// Reducer\r\nconst studentReducer = studentSlice.reducer;\r\n\r\nexport default studentReducer;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport { Box, Button, LinearProgress, Typography } from '@mui/material';\r\nimport studentApi from 'api/studentApi';\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\r\nimport { selectCityList, selectCityMap } from 'features/city/citySlice';\r\nimport { ListParams, Student } from 'models';\r\nimport { useEffect } from 'react';\r\nimport { Link, useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport StudentFilter from '../components/StudentFilter';\r\nimport StudentTable from '../components/StudentTable';\r\nimport {\r\n  selectStudentFilter,\r\n  selectStudentList,\r\n  selectStudentLoading,\r\n  selectStudentPagination,\r\n  studentActions,\r\n} from '../studentSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'relative',\r\n    paddingTo: theme.spacing(1),\r\n  },\r\n  titleContainer: {\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: theme.spacing(4),\r\n  },\r\n  loading: {\r\n    position: 'absolute',\r\n    top: theme.spacing(-1),\r\n    width: '100%',\r\n  },\r\n}));\r\nexport default function ListPage() {\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  const studentList = useAppSelector(selectStudentList);\r\n  const pagination = useAppSelector(selectStudentPagination);\r\n  const filter = useAppSelector(selectStudentFilter);\r\n  const loading = useAppSelector(selectStudentLoading);\r\n  const cityMap = useAppSelector(selectCityMap);\r\n  const cityList = useAppSelector(selectCityList);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(studentActions.fetchStudentList(filter));\r\n  }, [dispatch, filter]);\r\n\r\n  const handlePageChange = (e: any, page: number) => {\r\n    dispatch(\r\n      studentActions.setFilter({\r\n        ...filter,\r\n        _page: page,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSearchChange = (newFilter: ListParams) => {\r\n    dispatch(studentActions.setFilterWithDebounce(newFilter));\r\n  };\r\n\r\n  const handleFilterChange = (newFilter: ListParams) => {\r\n    dispatch(studentActions.setFilter(newFilter));\r\n  };\r\n\r\n  const handleRemoveStudent = async (student: Student) => {\r\n    try {\r\n      // Remove student API\r\n      await studentApi.remove(student?.id || '');\r\n\r\n      toast('🦄 Remove student successfully!', {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n\r\n      // Trigger to re-fetch student list with current filter\r\n      const newFilter = { ...filter };\r\n      dispatch(studentActions.setFilter(newFilter));\r\n    } catch (error) {\r\n      console.log('Failed to fetch student', error);\r\n    }\r\n  };\r\n\r\n  const handleEditStudent = async (student: Student) => {\r\n    history.push(`${match.url}/${student.id}`);\r\n  };\r\n  return (\r\n    <Box className={classes.root}>\r\n      {loading && <LinearProgress className={classes.loading} />}\r\n\r\n      <Box className={classes.titleContainer}>\r\n        <Typography variant=\"h4\">Students</Typography>\r\n\r\n        <Link to={`${match.url}/add`} style={{ textDecoration: 'none' }}>\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Add new student\r\n          </Button>\r\n        </Link>\r\n      </Box>\r\n\r\n      <Box mb={3}>\r\n        <StudentFilter\r\n          filter={filter}\r\n          cityList={cityList}\r\n          onSearchChange={handleSearchChange}\r\n          onChange={handleFilterChange}\r\n        />\r\n      </Box>\r\n\r\n      {/* student table */}\r\n      <StudentTable\r\n        studentList={studentList}\r\n        cityMap={cityMap}\r\n        onRemove={handleRemoveStudent}\r\n        onEdit={handleEditStudent}\r\n      />\r\n\r\n      {/* pagination */}\r\n      <Box mt={2} display=\"flex\" justifyContent=\"center\">\r\n        <Pagination\r\n          color=\"primary\"\r\n          count={Math.ceil(pagination._totalRows / pagination._limit)}\r\n          page={pagination?._page}\r\n          onChange={handlePageChange}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { useAppDispatch } from 'app/hooks';\r\nimport { cityActions } from 'features/city/citySlice';\r\nimport { useEffect } from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport AddEditPage from './pages/AddEditPage';\r\nimport ListPage from './pages/ListPage';\r\n\r\nexport default function StudentFeature() {\r\n  const match = useRouteMatch();\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(cityActions.fetchCityList());\r\n  }, [dispatch]);\r\n  return (\r\n    <Switch>\r\n      {/* match.path là nó sẽ lấy thằng path cha của nó , tức là admin/students */}\r\n      <Route path={match.path} exact>\r\n        <ListPage />\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/add`}>\r\n        <AddEditPage />\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/:studentId`}>\r\n        <AddEditPage />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import { Box, makeStyles } from '@material-ui/core';\r\nimport { Header, Sidebar } from 'components/Common';\r\nimport Dashboard from 'features/dashboard';\r\nimport StudentFeature from 'features/students';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'grid',\r\n    gridTemplateRows: 'auto 1fr',\r\n    gridTemplateColumns: '240px 1fr',\r\n    gridTemplateAreas: `\"header header\" \"sidebar main\"`,\r\n    minHeight: '100vh',\r\n  },\r\n  header: {\r\n    gridArea: 'header',\r\n  },\r\n  sidebar: {\r\n    gridArea: 'sidebar',\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  main: {\r\n    gridArea: 'main',\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(2, 3),\r\n  },\r\n}));\r\n\r\nexport function AdminLayout() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.header}>\r\n        <Header />\r\n      </Box>\r\n      <Box className={classes.sidebar}>\r\n        <Sidebar />\r\n      </Box>\r\n      <Box className={classes.main}>\r\n        <Switch>\r\n          <Route path=\"/admin/dashboard\">\r\n            <Dashboard />\r\n          </Route>\r\n          <Route path=\"/admin/students\">\r\n            <StudentFeature />\r\n          </Route>\r\n        </Switch>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, Button, CircularProgress, makeStyles, Paper, Typography } from '@material-ui/core';\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\r\nimport { authActions } from '../authSlice';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    minHeight: '100vh',\r\n  },\r\n  box: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  btn: {\r\n    marginTop: '24px',\r\n  },\r\n}));\r\n\r\nexport default function LoginPage() {\r\n  const classes = useStyle();\r\n  const dispatch = useAppDispatch();\r\n  const isLogging = useAppSelector((state) => state.auth.logging);\r\n\r\n  const handleLogin = () => {\r\n    //TODO: Get username & password from login form\r\n    dispatch(authActions.login({ username: '', password: '' }));\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper elevation={1} className={classes.box}>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          Student Management\r\n        </Typography>\r\n\r\n        <Box className={classes.btn}>\r\n          <Button fullWidth variant=\"contained\" color=\"primary\" onClick={handleLogin}>\r\n            Fake Login &nbsp;\r\n            {isLogging && <CircularProgress size={16} color=\"inherit\" />}\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import { PrivateRoute } from 'components/Common';\r\nimport { DefaultRoute } from 'components/Common/DefaultRoute';\r\nimport { AdminLayout } from 'components/Layout';\r\nimport LoginPage from 'features/auth/pages/LoginPage';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n          <LoginPage />\r\n        </Route>\r\n\r\n        <PrivateRoute path=\"/admin\">\r\n          <AdminLayout />\r\n        </PrivateRoute>\r\n\r\n        <Route>\r\n          <DefaultRoute />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk('counter/fetchCount', async (amount: number) => {\n  const response = await fetchCount(amount);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n    incrementSaga: (state, action: PayloadAction<number>) => {\n      state.status = 'loading';\n    },\n    incrementSagaSuccess: (state, action: PayloadAction<number>) => {\n      state.status = 'idle';\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      })\n      .addCase(incrementAsync.rejected, (state) => {\n        state.status = 'failed';\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount, incrementSaga, incrementSagaSuccess } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd =\n  (amount: number): AppThunk =>\n  (dispatch, getState) => {\n    const currentValue = selectCount(getState());\n    if (currentValue % 2 === 1) {\n      dispatch(incrementByAmount(amount));\n    }\n  };\n\nexport default counterSlice.reducer;\n","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport { push } from 'connected-react-router';\r\nimport { call, delay, fork, put, take } from 'redux-saga/effects';\r\nimport { authActions, LoginPayload } from './authSlice';\r\n\r\nfunction* handleLogin(payload: LoginPayload) {\r\n  try {\r\n    yield delay(1000);\r\n    localStorage.setItem('access_token', 'fake_token');\r\n    yield put(\r\n      authActions.loginSuccess({\r\n        id: 1,\r\n        name: 'Easy Frontend',\r\n      })\r\n    );\r\n    // redirect to admin page\r\n    yield put(push('./admin/dashboard'));\r\n  } catch (error) {\r\n    yield put(authActions.loginFailed('Error Login'));\r\n  }\r\n}\r\n\r\nfunction* handleLogout() {\r\n  yield delay(500);\r\n  localStorage.removeItem('access_token');\r\n  \r\n  // redirect to login page\r\n  yield put(push('./login'));\r\n}\r\n\r\nfunction* watchLoginFlow() {\r\n  while (true) {\r\n    const isLoggedIn = Boolean(localStorage.getItem('access_token'));\r\n    if (!isLoggedIn) {\r\n      const action: PayloadAction<LoginPayload> = yield take(authActions.login.type);\r\n      yield fork(handleLogin, action.payload);\r\n    }\r\n\r\n    yield take(authActions.logout.type);\r\n    yield call(handleLogout);\r\n  }\r\n}\r\n\r\nexport default function* authSaga() {\r\n  yield fork(watchLoginFlow);\r\n}\r\n","import { ListResponse, City } from 'models'\r\nimport axiosClient from './axiosClient'\r\n\r\nconst cityApi = {\r\n    getAll(): Promise<ListResponse<City>>{\r\n        const url='/cities'\r\n        return axiosClient.get(url,{\r\n            params:{\r\n                _page:1,\r\n                _limit:10,\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default cityApi","import cityApi from 'api/cityApi';\r\nimport { City, ListResponse } from 'models';\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { cityActions } from './citySlice';\r\n\r\nfunction* fetchCityList() {\r\n  try {\r\n    const response: ListResponse<City> = yield call(cityApi.getAll);\r\n    yield put(cityActions.fetchCityListSuccess(response));\r\n  } catch (error) {\r\n    console.log('Failed to fetch city list', error);\r\n    yield put(cityActions.fetchCityListFailed());\r\n  }\r\n}\r\n\r\nexport default function* citySaga() {\r\n  yield takeLatest(cityActions.fetchCityList.type, fetchCityList);\r\n}\r\n","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport { call, delay, put, takeEvery } from 'redux-saga/effects';\r\nimport { incrementSaga, incrementSagaSuccess } from './counterSlice';\r\n\r\nfunction* handleIncrementSaga(action: PayloadAction<number>) {\r\n  console.log('Waiting 2s');\r\n  yield call(delay, 1000)\r\n  console.log('Dispatch action');\r\n  yield put(incrementSagaSuccess(action.payload))\r\n}\r\n\r\nexport default function* counterSaga() {\r\n  yield takeEvery(incrementSaga.toString(), handleIncrementSaga); // lang nghe action increment\r\n//   yield takeLatest(incrementSaga.toString(), handleIncrementSaga); // lang nghe action increment\r\n}\r\n","import cityApi from 'api/cityApi';\r\nimport studentApi from 'api/studentApi';\r\nimport { City, ListResponse, Student } from 'models';\r\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport { dashboardActions, RankingByCity } from './dashboardSlice';\r\n\r\nfunction* fetchStatistics() {\r\n  const responseList: Array<ListResponse<Student>> = yield all([\r\n    call(studentApi.getAll, { _page: 1, _limit: 1, gender: 'male' }),\r\n    call(studentApi.getAll, { _page: 1, _limit: 1, gender: 'female' }),\r\n    call(studentApi.getAll, { _page: 1, _limit: 1, mark_gte: 8 }),\r\n    call(studentApi.getAll, { _page: 1, _limit: 1, mark_lte: 5 }),\r\n  ]);\r\n  const statisticList = responseList.map((x) => x.pagination._totalRows);\r\n  const [maleCount, femaleCount, highMarkCount, lowMarkCount] = statisticList;\r\n\r\n  yield put(\r\n    dashboardActions.setStatistics({ maleCount, femaleCount, highMarkCount, lowMarkCount })\r\n  );\r\n}\r\n\r\nfunction* fetchHighestStudentList() {\r\n  const { data }: ListResponse<Student> = yield call(studentApi.getAll, {\r\n    _page: 1,\r\n    _limit: 5,\r\n    _sort: 'mark',\r\n    _order: 'desc',\r\n  });\r\n  yield put(dashboardActions.setHighestStudentList(data));\r\n}\r\n\r\nfunction* fetchLowestStudentList() {\r\n  const { data }: ListResponse<Student> = yield call(studentApi.getAll, {\r\n    _page: 1,\r\n    _limit: 5,\r\n    _sort: 'mark',\r\n    _order: 'asc',\r\n  });\r\n  yield put(dashboardActions.setLowestStudentList(data));\r\n}\r\n\r\nfunction* fetchRankingByCityList() {\r\n  // Fetch city list\r\n  const { data: cityList }: ListResponse<City> = yield call(cityApi.getAll);\r\n\r\n  // Fetch ranking per city\r\n  const callList = cityList.map((x) =>\r\n    call(studentApi.getAll, {\r\n      _page: 1,\r\n      _limit: 5,\r\n      _sort: 'mark',\r\n      _order: 'desc',\r\n      city: x.code,\r\n    })\r\n  );\r\n  const responseList: Array<ListResponse<Student>> = yield all(callList);\r\n  const rankingByCityList: Array<RankingByCity> = responseList.map((x, idx) => ({\r\n    cityId: cityList[idx].code,\r\n    cityName: cityList[idx].name,\r\n    rankingList: x.data,\r\n  }));\r\n\r\n  // Update state\r\n  yield put(dashboardActions.setRankingByCityList(rankingByCityList));\r\n}\r\n\r\nfunction* fetchDashboardData() {\r\n  try {\r\n    yield all([\r\n      call(fetchStatistics),\r\n      call(fetchHighestStudentList),\r\n      call(fetchLowestStudentList),\r\n      call(fetchRankingByCityList),\r\n    ]);\r\n    yield put(dashboardActions.fetchDataSuccess());\r\n  } catch (error) {\r\n    console.log('Failed to fetch dashboard data', error);\r\n    yield put(dashboardActions.fetchDataSuccess());\r\n  }\r\n}\r\n\r\nexport default function* dashboardSaga() {\r\n  yield takeLatest(dashboardActions.fetchData.type, fetchDashboardData);\r\n}\r\n","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport studentApi from 'api/studentApi';\r\nimport { ListParams, ListResponse, Student } from 'models';\r\nimport { call, debounce, put, takeLatest } from 'redux-saga/effects';\r\nimport { studentActions } from './studentSlice';\r\n\r\nfunction* fetchStudentList(action: PayloadAction<ListParams>) {\r\n  try {\r\n    const response: ListResponse<Student> = yield call(studentApi.getAll, action.payload);\r\n    yield put(studentActions.fetchStudentListSuccess(response));\r\n  } catch (error) {\r\n    console.log('Failed to fetch student list', error);\r\n    yield put(studentActions.fetchStudentListFailed());\r\n  }\r\n}\r\n\r\nfunction* handleSearchDebounce(action: PayloadAction<ListParams>) {\r\n  yield put(studentActions.setFilter(action.payload));\r\n}\r\n\r\nexport default function* studentSaga() {\r\n  yield takeLatest(studentActions.fetchStudentList, fetchStudentList);\r\n\r\n  yield debounce(500, studentActions.setFilterWithDebounce.type, handleSearchDebounce);\r\n}\r\n","import authSaga from 'features/auth/authSaga';\r\nimport citySaga from 'features/city/citySaga';\r\nimport counterSaga from 'features/counter/couterSaga';\r\nimport dashboardSaga from 'features/dashboard/dashboardSaga';\r\nimport studentSaga from 'features/students/studentSaga';\r\nimport { all } from 'redux-saga/effects';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([counterSaga(), authSaga(), dashboardSaga(), studentSaga(), citySaga()]);\r\n}\r\n","import { Action, combineReducers, configureStore, ThunkAction } from '@reduxjs/toolkit';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport authReducer from 'features/auth/authSlice';\nimport cityReducer from 'features/city/citySlice';\nimport dashboardReducer from 'features/dashboard/dashboardSlice';\nimport studentReducer from 'features/students/studentSlice';\nimport createSagaMiddleware from 'redux-saga';\nimport { history } from 'utils';\nimport counterReducer from '../features/counter/counterSlice';\nimport rootSaga from './rootSaga';\n\nconst rootReducer = combineReducers({\n  router: connectRouter(history),\n  counter: counterReducer,\n  auth: authReducer,\n  dashboard: dashboardReducer,\n  student: studentReducer,\n  city: cityReducer,\n});\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(sagaMiddleware, routerMiddleware(history)),\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { CssBaseline } from '@material-ui/core';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport { history } from 'utils';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// const container = document.getElementById('root')!;\r\n// const root = createRoot(container);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ConnectedRouter history={history}>\r\n        <CssBaseline />\r\n        <App />\r\n      </ConnectedRouter>\r\n\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}